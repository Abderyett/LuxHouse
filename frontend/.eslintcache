[{"/Users/macbooktouch/Desktop/Lux House/frontend/src/index.jsx":"1","/Users/macbooktouch/Desktop/Lux House/frontend/src/App.jsx":"2","/Users/macbooktouch/Desktop/Lux House/frontend/src/Global.jsx":"3","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/index.jsx":"4","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProductsScreen.jsx":"5","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/HomeScreen.jsx":"6","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/LoginScreen.jsx":"7","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/RegisterScreen.jsx":"8","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/SingleProduct.jsx":"9","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ContactScreen.jsx":"10","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/index.jsx":"11","/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/CurrencyFormat.jsx":"12","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/Radius.jsx":"13","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/Shadow.jsx":"14","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/pagination.jsx":"15","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/Colors.jsx":"16","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/index.jsx":"17","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/index.jsx":"18","/Users/macbooktouch/Desktop/Lux House/frontend/src/popularData.jsx":"19","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/NextArrow.jsx":"20","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Dots.jsx":"21","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/PrevArrow.jsx":"22","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Circle.jsx":"23","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/BlueCircle.jsx":"24","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Menu.jsx":"25","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Dimension.jsx":"26","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Heart.jsx":"27","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Equipement.jsx":"28","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Footer.jsx":"29","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Header.jsx":"30","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Hero.jsx":"31","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Features.jsx":"32","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Error.jsx":"33","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/BlogSection.jsx":"34","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/PopularItems.jsx":"35","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Accordion.jsx":"36","/Users/macbooktouch/Desktop/Lux House/frontend/src/featureData.jsx":"37","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/store.js":"38","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/productListReducers.js":"39","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/types.js":"40","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/productActions.js":"41","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Loader.jsx":"42","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Message.jsx":"43","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/cartReducer.js":"44","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/cartAction.js":"45","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/CartIcon.jsx":"46","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/CartDropdown.jsx":"47","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/CartScreen.jsx":"48","/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/CheckCircle.jsx":"49","/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/addCartItem.js":"50","/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/incrementCartQty.js":"51","/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/decrementCartQty.js":"52","/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/index.js":"53","/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/removeItem.js":"54","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/userReducer.js":"55","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/userActions.js":"56","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProfileScreen.jsx":"57","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/CheckoutScreen.jsx":"58","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/PaymentScreen.jsx":"59","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/PlaceOrderScreen.jsx":"60","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ShippingMethodScreen.jsx":"61","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/orderReducer.js":"62","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/orderAction.js":"63","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/OrderScreen.jsx":"64","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/paymentReducer.js":"65","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/paymentAction.js":"66","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/SuccessPaymentScreen.jsx":"67","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/CancelPaymentScreen.jsx":"68","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/PaypalButton.jsx":"69","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/UserListScreen.jsx":"70","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Modal.jsx":"71","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/UserScreen.jsx":"72","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProductsListScreen.jsx":"73","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProductEditScreen.jsx":"74","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/DropDownInput.jsx":"75","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/LoaderSemiCircle.jsx":"76","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/OrdersScreen.jsx":"77","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/OrderDetailsAdminScreen.jsx":"78","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/ScrollTop.jsx":"79","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/wichlistReducer.js":"80","/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/wichlistAction.js":"81","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/WichListScreen.jsx":"82"},{"size":592,"mtime":1630407259090,"results":"83","hashOfConfig":"84"},{"size":2228,"mtime":1634203407591,"results":"85","hashOfConfig":"84"},{"size":2941,"mtime":1626351296481,"results":"86","hashOfConfig":"84"},{"size":759,"mtime":1634203346959,"results":"87","hashOfConfig":"84"},{"size":12452,"mtime":1634029574816,"results":"88","hashOfConfig":"84"},{"size":332,"mtime":1625223013635,"results":"89","hashOfConfig":"84"},{"size":9661,"mtime":1634033171831,"results":"90","hashOfConfig":"84"},{"size":7692,"mtime":1630596577957,"results":"91","hashOfConfig":"84"},{"size":9729,"mtime":1634202819260,"results":"92","hashOfConfig":"84"},{"size":11618,"mtime":1634031923247,"results":"93","hashOfConfig":"84"},{"size":108,"mtime":1624815667439,"results":"94","hashOfConfig":"84"},{"size":130,"mtime":1627757844616,"results":"95","hashOfConfig":"84"},{"size":127,"mtime":1616244950849,"results":"96","hashOfConfig":"84"},{"size":573,"mtime":1616243488315,"results":"97","hashOfConfig":"84"},{"size":346,"mtime":1624815655431,"results":"98","hashOfConfig":"84"},{"size":4345,"mtime":1627815959160,"results":"99","hashOfConfig":"84"},{"size":277,"mtime":1627835192915,"results":"100","hashOfConfig":"84"},{"size":457,"mtime":1634026557744,"results":"101","hashOfConfig":"84"},{"size":11954,"mtime":1624893455852,"results":"102","hashOfConfig":"84"},{"size":971,"mtime":1624892422338,"results":"103","hashOfConfig":"84"},{"size":29666,"mtime":1624892910731,"results":"104","hashOfConfig":"84"},{"size":970,"mtime":1624892435691,"results":"105","hashOfConfig":"84"},{"size":5630,"mtime":1627724481669,"results":"106","hashOfConfig":"84"},{"size":1748,"mtime":1627734402341,"results":"107","hashOfConfig":"84"},{"size":771,"mtime":1625159256261,"results":"108","hashOfConfig":"84"},{"size":1863,"mtime":1626623336791,"results":"109","hashOfConfig":"84"},{"size":1534,"mtime":1626881350454,"results":"110","hashOfConfig":"84"},{"size":2564,"mtime":1626623391545,"results":"111","hashOfConfig":"84"},{"size":3807,"mtime":1625330128924,"results":"112","hashOfConfig":"84"},{"size":13739,"mtime":1634103637063,"results":"113","hashOfConfig":"84"},{"size":3454,"mtime":1627720640010,"results":"114","hashOfConfig":"84"},{"size":2286,"mtime":1627978798259,"results":"115","hashOfConfig":"84"},{"size":507,"mtime":1625249599144,"results":"116","hashOfConfig":"84"},{"size":4918,"mtime":1627978780095,"results":"117","hashOfConfig":"84"},{"size":4509,"mtime":1630595847996,"results":"118","hashOfConfig":"84"},{"size":6202,"mtime":1634022657328,"results":"119","hashOfConfig":"84"},{"size":1388,"mtime":1624720511376,"results":"120","hashOfConfig":"84"},{"size":2751,"mtime":1634191844261,"results":"121","hashOfConfig":"84"},{"size":3521,"mtime":1633853461963,"results":"122","hashOfConfig":"84"},{"size":6728,"mtime":1634107830158,"results":"123","hashOfConfig":"84"},{"size":4079,"mtime":1633850479646,"results":"124","hashOfConfig":"84"},{"size":1770,"mtime":1627536101395,"results":"125","hashOfConfig":"84"},{"size":870,"mtime":1630218256064,"results":"126","hashOfConfig":"84"},{"size":1614,"mtime":1630596415041,"results":"127","hashOfConfig":"84"},{"size":1845,"mtime":1630144004316,"results":"128","hashOfConfig":"84"},{"size":1042,"mtime":1630183815524,"results":"129","hashOfConfig":"84"},{"size":2728,"mtime":1633929851985,"results":"130","hashOfConfig":"84"},{"size":5292,"mtime":1630595891622,"results":"131","hashOfConfig":"84"},{"size":3827,"mtime":1627734419631,"results":"132","hashOfConfig":"84"},{"size":485,"mtime":1630073600388,"results":"133","hashOfConfig":"84"},{"size":413,"mtime":1628105395998,"results":"134","hashOfConfig":"84"},{"size":588,"mtime":1628169915507,"results":"135","hashOfConfig":"84"},{"size":133,"mtime":1629969834970,"results":"136","hashOfConfig":"84"},{"size":271,"mtime":1628679836626,"results":"137","hashOfConfig":"84"},{"size":4405,"mtime":1631771796278,"results":"138","hashOfConfig":"84"},{"size":7481,"mtime":1631771744496,"results":"139","hashOfConfig":"84"},{"size":10093,"mtime":1634034805450,"results":"140","hashOfConfig":"84"},{"size":12471,"mtime":1633357634676,"results":"141","hashOfConfig":"84"},{"size":5048,"mtime":1631710754264,"results":"142","hashOfConfig":"84"},{"size":8961,"mtime":1633510284014,"results":"143","hashOfConfig":"84"},{"size":8337,"mtime":1630596444338,"results":"144","hashOfConfig":"84"},{"size":2852,"mtime":1633498642778,"results":"145","hashOfConfig":"84"},{"size":3839,"mtime":1633448431899,"results":"146","hashOfConfig":"84"},{"size":10848,"mtime":1634068860273,"results":"147","hashOfConfig":"84"},{"size":1617,"mtime":1630836829219,"results":"148","hashOfConfig":"84"},{"size":2490,"mtime":1630824829193,"results":"149","hashOfConfig":"84"},{"size":2229,"mtime":1631710788895,"results":"150","hashOfConfig":"84"},{"size":1412,"mtime":1631386869689,"results":"151","hashOfConfig":"84"},{"size":1591,"mtime":1630830424505,"results":"152","hashOfConfig":"84"},{"size":4453,"mtime":1634036188986,"results":"153","hashOfConfig":"84"},{"size":2583,"mtime":1631780314003,"results":"154","hashOfConfig":"84"},{"size":6221,"mtime":1631710568275,"results":"155","hashOfConfig":"84"},{"size":5979,"mtime":1634036297960,"results":"156","hashOfConfig":"84"},{"size":31087,"mtime":1633029375973,"results":"157","hashOfConfig":"84"},{"size":6536,"mtime":1633030054924,"results":"158","hashOfConfig":"84"},{"size":796,"mtime":1632818906797,"results":"159","hashOfConfig":"84"},{"size":4010,"mtime":1634037615234,"results":"160","hashOfConfig":"84"},{"size":9423,"mtime":1633501420208,"results":"161","hashOfConfig":"84"},{"size":1104,"mtime":1634030090883,"results":"162","hashOfConfig":"84"},{"size":874,"mtime":1634218373913,"results":"163","hashOfConfig":"84"},{"size":936,"mtime":1634211019436,"results":"164","hashOfConfig":"84"},{"size":3230,"mtime":1634218425210,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1cfzsjk",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"168"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"168"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"168"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"168"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"168"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"168"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbooktouch/Desktop/Lux House/frontend/src/index.jsx",[],["339","340","341","342","343"],"/Users/macbooktouch/Desktop/Lux House/frontend/src/App.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/Global.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/index.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProductsScreen.jsx",["344","345","346"],"/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearFilters, listProduct } from '../actions/productActions';\nimport { addItem } from '../actions/cartAction';\nimport { Header, Loader, Message, Accordion, ScrollTop } from '../components';\nimport { color, shadow, rounded } from '../utilities';\nimport { BlueCircle, CheckCircle } from '../utilities/svg';\nimport { ORDER_DETAILS_RESET, ADDED_ORDER_RESET } from '../actions/types';\n\nexport function ProductsScreen() {\n  const dispatch = useDispatch();\n  const porductList = useSelector((state) => state.porductList);\n  const cartItem = useSelector((state) => state.cart.cartItem);\n  const filterProduct = useSelector((state) => state.filterProduct);\n  const { color: pickedColor, price: selectedPrice, freeShipping } = filterProduct;\n  const { loading, error, products } = porductList;\n\n  const [subCategories, setsubCategories] = useState([]);\n  const [filtredProducts, setfiltredProducts] = useState([]);\n  const [categorieText, setCategorieText] = useState('all');\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchedProducts, setSearchedProducts] = useState([]);\n  const [sortBy, setSortBy] = useState('highest');\n  const ref = useRef();\n  useEffect(() => {\n    dispatch(listProduct());\n    dispatch({ type: ORDER_DETAILS_RESET });\n    dispatch({ type: ADDED_ORDER_RESET });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (products) {\n      const newArr = products.map((el) => el.subcategory);\n      const categories = ['all', ...new Set(newArr)];\n      setsubCategories(categories);\n      setfiltredProducts(products);\n    }\n    setSearchedProducts(products);\n  }, [products]);\n\n  useEffect(() => {\n    if (categorieText === 'all') {\n      setSearchedProducts(products);\n    } else if (subCategories.includes(categorieText)) {\n      setSearchedProducts(filtredProducts);\n      const newProducts = filtredProducts.filter((el) => el.subcategory === categorieText);\n\n      setSearchedProducts(newProducts);\n    }\n  }, [categorieText, subCategories, filtredProducts, products]);\n\n  const isAddedProduct = (id) => {\n    const val = cartItem.length > 0 && cartItem.find((el) => el._id === id);\n\n    const newVal = val && val.itemAdded;\n    return newVal;\n  };\n\n  const searchHandler = (e) => {\n    setSearchTerm(e.target.value);\n    const filtred = filtredProducts.filter((el) => el.name.toLowerCase().startsWith(e.target.value.toLowerCase()));\n    if (searchTerm) {\n      setSearchedProducts(filtredProducts);\n    }\n    setSearchedProducts(filtred);\n  };\n\n  const selectedSort = (e) => {\n    setSortBy(e.target.value);\n    if (e.target.value === 'lowest') {\n      setSearchedProducts(filtredProducts);\n      setSearchedProducts(searchedProducts.sort((a, b) => a.price - b.price));\n    } else if (e.target.value === 'highest') {\n      setSearchedProducts(filtredProducts);\n      setSearchedProducts(searchedProducts.sort((a, b) => b.price - a.price));\n    } else if (e.target.value === 'name-a') {\n      setSearchedProducts(filtredProducts);\n      const tempProducts = searchedProducts.sort((a, b) => a.name.localeCompare(b.name));\n      setSearchedProducts(tempProducts);\n    } else if (e.target.value === 'name-z') {\n      setSearchedProducts(filtredProducts);\n      const tempProducts = searchedProducts.sort((a, b) => b.name.localeCompare(a.name));\n      setSearchedProducts(tempProducts);\n    }\n  };\n\n  useEffect(() => {\n    setSearchedProducts(filtredProducts);\n    if (pickedColor !== 'all') {\n      const tempProducts = filtredProducts.filter((product) => product.colors.find((c) => c === pickedColor));\n      console.log('tempProducts', tempProducts);\n      setSearchedProducts(tempProducts);\n    }\n  }, [pickedColor]);\n\n  useEffect(() => {\n    if (freeShipping) {\n      const tempProducts = searchedProducts.filter((product) => product.shipping === true);\n      setSearchedProducts(tempProducts);\n    } else {\n      setSearchedProducts(filtredProducts);\n    }\n  }, [freeShipping]);\n  useEffect(() => {\n    if (selectedPrice && selectedPrice[0] === 'Under') {\n      const tempProducts = filtredProducts.filter((product) => product.price <= selectedPrice[1]);\n      setSearchedProducts(tempProducts);\n    } else if (selectedPrice && selectedPrice[0] === 'Above') {\n      const tempProducts = filtredProducts.filter((product) => product.price >= selectedPrice[1]);\n      setSearchedProducts(tempProducts);\n    } else {\n      const tempProducts = filtredProducts.filter(\n        (product) => product.price >= selectedPrice[0] && product.price <= selectedPrice[1]\n      );\n      setSearchedProducts(tempProducts);\n    }\n  }, [selectedPrice]);\n\n  const clearHandler = () => {\n    dispatch(clearFilters());\n    dispatch(listProduct());\n  };\n\n  return (\n    <>\n      <Header productList />\n      <ScrollTop />\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message mt=\"4rem\" bg=\"danger\">\n          {error}\n        </Message>\n      ) : (\n        <Container>\n          <Div>\n            <CategorieWrapper ref={ref}>\n              {subCategories.map((el, index) => (\n                <Button key={index} type=\"button\" onClick={(e) => setCategorieText(e.target.textContent.toLowerCase())}>\n                  {el}\n                </Button>\n              ))}\n            </CategorieWrapper>\n          </Div>\n          <ContentWrapper>\n            <FilterWrapper>\n              <Input type=\"text\" value={searchTerm} onChange={searchHandler} placeholder=\"Search\" />\n              <Accordion />\n\n              <ClearBtn type=\"button\" onClick={clearHandler}>\n                Clear Filters\n              </ClearBtn>\n            </FilterWrapper>\n            <div>\n              <HeaderDetails>\n                <ResultsNumber>\n                  {searchedProducts && searchedProducts.length === 0\n                    ? searchedProducts.length\n                    : searchedProducts && searchedProducts.length}{' '}\n                  Results{' '}\n                </ResultsNumber>\n                <hr /> <SortText>Sort By</SortText>{' '}\n                <Select value={sortBy} id=\"sort\" onChange={selectedSort}>\n                  <option value=\"highest\">Price (Highest) &nbsp;</option>\n                  <option value=\"lowest\">Price (Lowest) &nbsp;</option>\n                  <option value=\"name-a\">Name (A -Z) &nbsp;</option>\n                  <option value=\"name-z\">Name (Z-A) &nbsp;</option>\n                </Select>\n              </HeaderDetails>\n\n              <GridContainer>\n                {searchedProducts.map((el) => (\n                  <Card key={el._id}>\n                    <Link to={`/products/${el._id}`}>\n                      <StyledImg src={el.image && el.image[0].url} alt={el.subcategory} />\n                      <Title>\n                        <h3>{el.name}</h3>\n                        <PriceText category={el.category}>${el.price}</PriceText>\n                      </Title>\n                      <Subcategory category={el.category}>{el.subcategory} </Subcategory>\n                      <Description>{el.description.substring(0, 100)}...</Description>\n                    </Link>\n                    <IconWrapper type=\"button\" onClick={() => dispatch(addItem(el))}>\n                      {isAddedProduct(el._id) === true ? <CheckCircle /> : <BlueCircle />}\n                    </IconWrapper>\n                  </Card>\n                ))}\n              </GridContainer>\n            </div>\n          </ContentWrapper>\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  padding-bottom: 5rem;\n`;\nconst ContentWrapper = styled.div`\n  padding-top: 5rem;\n\n  display: grid;\n  grid-template-columns: 24% 1fr;\n  @media (max-width: 1030px) {\n    grid-template-columns: 1fr;\n    padding-top: 2rem;\n  }\n`;\nconst FilterWrapper = styled.div`\n  padding-left: 4rem;\n  article {\n    width: 90%;\n    padding: 1rem 0.5rem;\n  }\n`;\n\nconst ClearBtn = styled.button`\n  background: ${color.red_500};\n  color: ${color.white};\n  padding: 0.5rem;\n  border-radius: ${rounded.xxl};\n  margin-top: 1rem;\n  margin-left: 1rem;\n  cursor: pointer;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 21rem);\n  grid-gap: 2.5rem;\n  width: 90%;\n  place-content: center;\n  justify-content: center;\n  justify-items: stretch;\n`;\nconst HeaderDetails = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 3rem;\n  hr {\n    width: 56%;\n    @media (max-width: 1030px) {\n      width: 30%;\n    }\n  }\n  @media (max-width: 1030px) {\n    margin-top: 2rem;\n  }\n`;\n\nconst Card = styled.div`\n  width: 20rem;\n  height: 24rem;\n  box-shadow: ${shadow.xxl};\n  background-color: ${color.white};\n  padding-left: 2rem;\n  padding-right: 2rem;\n  cursor: pointer;\n  position: relative;\n`;\nconst StyledImg = styled.img`\n  width: 15rem;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n`;\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n\n  color: ${color.grey_800};\n  &:active {\n    color: ${color.grey_800};\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    font-family: 'avenir_semi';\n  }\n`;\nconst PriceText = styled.h5`\n  color: ${color.grey_800};\n  &::after {\n    content: '';\n    background: ${({ category }) =>\n      category === 'furniture'\n        ? 'rgba(66, 153, 225, 0.3)'\n        : category === 'lighting'\n        ? 'rgba(244, 223, 33, 0.3)'\n        : `rgba(72, 187, 120, 0.3)`};\n    height: 10px;\n    width: 2.6rem;\n    position: absolute;\n    bottom: 15px;\n    right: 2px;\n  }\n`;\n\nconst Subcategory = styled.p`\n  font-size: 0.8rem;\n  margin-bottom: 1rem;\n  color: ${({ category }) =>\n    category === 'furniture'\n      ? 'rgba(66, 153, 225, 1)'\n      : category === 'lighting'\n      ? 'rgba(244, 223, 33, 1)'\n      : `rgba(72, 187, 120, 1)`};\n  font-family: 'playfair_italic';\n  font-weight: 900;\n  text-transform: uppercase;\n`;\nconst Description = styled.p`\n  font-size: 0.8rem;\n`;\n\nconst CategorieWrapper = styled.div`\n  display: flex;\n  height: 5rem;\n  align-items: center;\n  justify-content: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n  width: 100vw;\n  border-bottom: 1px solid ${color.warm_grey_100};\n  @media (max-width: 1030px) {\n    padding-right: 2rem;\n    padding-left: 2rem;\n    justify-content: flex-start;\n  }\n\n  &::-webkit-scrollbar {\n    width: 0;\n    background: transparent;\n  }\n`;\n\nconst Button = styled.button`\n  color: ${color.grey_700};\n  border-radius: ${rounded.xxl};\n  padding: 0.5rem;\n  text-transform: capitalize;\n  border: 1px solid #dedede;\n  margin-right: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background: rgba(244, 244, 244, 0.9);\n  }\n  &:focus {\n    background-color: ${color.black};\n    color: ${color.white};\n  }\n`;\n\nconst Div = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 60px;\n    height: 100%;\n    background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, #fff 100%);\n  }\n`;\n\nconst IconWrapper = styled.button`\n  background-color: transparent;\n`;\n\nconst Input = styled.input`\n  border-radius: ${rounded.md};\n  height: 2rem;\n  width: 13rem;\n  max-width: 13rem;\n  text-indent: 5%;\n  font-size: 1rem;\n  color: ${color.grey_800};\n  font-family: 'avenir_regular';\n  box-shadow: ${shadow.lg};\n  margin-top: 1rem;\n  box-shadow: 0px 0px 0px 2px ${color.grey_300};\n  margin-left: 1.5rem;\n  @media (max-width: 768px) {\n    width: 90vw;\n  }\n  outline: none;\n  &:focus {\n    box-shadow: 0px 0px 0px 2px ${color.grey_600};\n  }\n`;\n//* Select ===================\n\nconst Select = styled.select`\n  appearance: none;\n\n  background-color: transparent;\n  border: none;\n\n  margin: 0;\n\n  font-family: inherit;\n  font-size: inherit;\n  cursor: inherit;\n  line-height: inherit;\n  border: 1px solid ${color.grey_400};\n  border-radius: ${rounded.md};\n  padding: 0.5rem;\n  position: relative;\n  @media (max-width: 1030px) {\n    margin-right: 1rem;\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${color.grey_600};\n  }\n`;\n\nconst SortText = styled.span`\n  display: inline-block;\n  width: 7ch;\n  margin-left: 1rem;\n`;\nconst ResultsNumber = styled.span`\n  display: inline-block;\n  width: 10ch;\n  margin-left: 3rem;\n  margin-right: 1rem;\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/HomeScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/LoginScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/RegisterScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/SingleProduct.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ContactScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/index.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/CurrencyFormat.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/Radius.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/Shadow.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/pagination.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/Colors.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/index.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/index.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/popularData.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/NextArrow.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Dots.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/PrevArrow.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Circle.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/BlueCircle.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Menu.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Dimension.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Heart.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/Equipement.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Footer.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Header.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Hero.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Features.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Error.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/BlogSection.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/PopularItems.jsx",["347"],"/* eslint-disable no-shadow */\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiHeart } from 'react-icons/fi';\nimport { useInView } from 'react-intersection-observer';\nimport { motion, useAnimation } from 'framer-motion';\nimport { pagination, color, shadow } from '../utilities';\nimport { Circle, NextArrow, PrevArrow, Dots } from '../utilities/svg';\n\nexport function PopularItems() {\n  const { ref, inView } = useInView({\n    threshold: 0.5,\n  });\n  const animation = useAnimation();\n  const [data, setData] = useState(pagination());\n  const [page, setPage] = useState(0);\n\n  const nextPage = () => {\n    setPage((oldPage) => {\n      let nextPage = oldPage + 1;\n      if (nextPage > data.length - 1) {\n        nextPage = 0;\n      }\n      return nextPage;\n    });\n  };\n  const prevPage = () => {\n    setPage((oldPage) => {\n      let prevPage = oldPage - 1;\n      if (prevPage < 0) {\n        prevPage = data.length - 1;\n      }\n      return prevPage;\n    });\n  };\n\n  useEffect(() => {\n    if (inView) {\n      animation.start({\n        x: 0,\n        opacity: 1,\n        transition: {\n          duration: 2,\n        },\n      });\n    }\n  }, [inView, animation]);\n\n  return (\n    <CardWrapper ref={ref}>\n      <Heading animate={animation} initial={{ x: 10, opacity: 0 }}>\n        <h2>Popular Items</h2>\n        <div>\n          {page + 1} of {data.length}\n        </div>\n        <button type=\"button\" onClick={prevPage}>\n          <PrevArrow />\n        </button>\n        <button type=\"button\" onClick={nextPage}>\n          <NextArrow />\n        </button>\n      </Heading>\n      <Wrapper animate={animation} initial={{ x: -10, opacity: 0 }}>\n        <StyedDots>\n          <Dots />\n        </StyedDots>\n        {data[page].map((el) => {\n          const { id, title, category, img, price } = el;\n          return (\n            <Card key={id}>\n              <Heart />\n              <StyledImg src={img} alt={title} />\n              <Title>\n                <h3>{title}</h3>\n                <h5>${price}</h5>\n              </Title>\n              <p>{category} </p>\n\n              <Circle />\n            </Card>\n          );\n        })}\n      </Wrapper>\n    </CardWrapper>\n  );\n}\n\nconst CardWrapper = styled.section`\n  background: ${color.sugar_swi};\n  width: 100%;\n  padding: 15rem 3rem;\n  margin-left: auto;\n  margin-right: auto;\n  margin: 10rem 0;\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 30% 70%;\n  position: relative;\n  @media (max-width: 768px) {\n    margin: 5rem 0;\n    padding: 5rem 3rem;\n    grid-auto-flow: row;\n    grid-template-columns: 1fr;\n  }\n  h2 {\n    font-family: 'avenir_semi';\n    width: 2ch;\n    line-height: 3.5rem;\n  }\n`;\nconst Wrapper = styled(motion.div)`\n  display: grid;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fit, 20rem);\n  @media (max-width: 1464px) {\n    grid-gap: 2rem;\n  }\n`;\n\nconst Heart = styled(FiHeart)`\n  font-size: 1.5rem;\n  position: absolute;\n  top: 10px;\n  right: 20px;\n  opacity: 0;\n  transition: opacity 0.6s ease-in-out;\n  &:active {\n    color: red;\n    fill: red;\n  }\n`;\n\nconst Heading = styled(motion.div)`\n  position: relative;\n  @media (max-width: 768px) {\n    margin-bottom: 5rem;\n    justify-self: center;\n  }\n  div {\n    color: ${color.grey_700};\n    margin-bottom: 3rem;\n  }\n  button {\n    background: transparent;\n  }\n`;\n\nconst Card = styled.div`\n  background-color: ${color.white};\n  border-right: 1px solid ${color.grey_300};\n  padding: 0 1rem 0 2rem;\n  transition: all 0.6s ease-in-out;\n  cursor: pointer;\n  position: relative;\n  z-index: 1;\n  &:last-child {\n    border: none;\n  }\n  &:hover {\n    box-shadow: ${shadow.xxl};\n    z-index: 2;\n\n    ${Heart} {\n      opacity: 1;\n    }\n  }\n\n  h3 {\n    font-size: 1.4rem;\n    font-family: 'avenir_semi';\n    span {\n      font-family: 'avenir_regular';\n    }\n  }\n  p {\n    font-size: 1rem;\n    margin-bottom: 5rem;\n    color: #f4df21;\n    font-family: 'playfair_italic';\n    font-weight: 900;\n    text-transform: uppercase;\n  }\n`;\n\nconst StyledImg = styled.img`\n  width: 15rem;\n  padding-bottom: 2rem;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  h5::after {\n    content: '';\n    background: rgba(244, 223, 33, 0.3);\n    height: 10px;\n    width: 2.5rem;\n    position: absolute;\n    bottom: 15px;\n    right: 2px;\n  }\n`;\n\nconst StyedDots = styled.div`\n  position: absolute;\n  top: -3%;\n  left: 0%;\n  z-index: 0;\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Accordion.jsx",["348"],"/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\nimport { FiCheck } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { color } from '../utilities';\nimport { selectColor, selectPrice, selectShipping } from '../actions/productActions';\n\nexport function Accordion() {\n  const [activeIndex, setactiveIndex] = useState(null);\n  const [colorsList, setColorsList] = useState([]);\n\n  const [checked, setChecked] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const porductList = useSelector((state) => state.porductList);\n  const filterProduct = useSelector((state) => state.filterProduct);\n\n  const { color: pickedColor, price: selectedPrice, freeShipping } = filterProduct;\n  const [selectedColor, setSelectedColor] = useState(pickedColor);\n  const dispatch = useDispatch();\n  const data = [\n    {\n      title: 'Colors',\n      iterable: colorsList,\n    },\n    {\n      title: 'Price',\n      iterable: [\n        ['Under', 250],\n        [250, 500],\n        [500, 1000],\n        [1000, 2000],\n        [2000, 3000],\n        ['Above', 3000],\n      ],\n    },\n  ];\n\n  useEffect(() => {\n    const colors = porductList.products.map((el) => el.colors);\n    const flat = colors.flat();\n    const uniqueColors = [...new Set(flat)];\n    setColorsList(uniqueColors);\n  }, [porductList, pickedColor, selectPrice, freeShipping]);\n\n  const toggle = (i) => {\n    if (activeIndex === i) {\n      return setactiveIndex(null);\n    }\n    setactiveIndex(i);\n  };\n\n  const handleChange = (e, i) => {\n    if (selectedIndex === i) {\n      return setChecked(null);\n    }\n    setChecked(true);\n  };\n\n  const colorsHandler = (item) => {\n    setSelectedColor(item);\n    dispatch(selectColor(item));\n  };\n  const priceHandler = (event, index, price) => {\n    handleChange(event, index);\n\n    dispatch(selectPrice(price));\n  };\n\n  return (\n    <>\n      <SingleFilter index={activeIndex}>\n        <Content>\n          {data.map((el, index) => (\n            <Container key={index}>\n              <Title onClick={() => toggle(index)}>\n                {el.title}\n                <span>{activeIndex === null ? <IoIosArrowUp /> : <IoIosArrowDown />}</span>\n              </Title>\n              {activeIndex === index && (\n                <Details\n                  key=\"content\"\n                  initial=\"collapsed\"\n                  animate=\"open\"\n                  exit=\"collapsed\"\n                  variants={{\n                    open: { opacity: 1, height: 'auto' },\n                    collapsed: { opacity: 0, height: 0 },\n                  }}\n                  transition={{ duration: 0.5, ease: [0.04, 0.62, 0.23, 0.98] }}\n                >\n                  <ColorWrapper>\n                    {el.iterable &&\n                      el.iterable.map((item, i) =>\n                        item && item.includes('#') ? (\n                          <Div>\n                            <Circle key={i} colored={item} onClick={() => colorsHandler(item)}>\n                              {item === selectedColor && pickedColor.length > 0 ? <FiCheck /> : ''}\n                            </Circle>\n                          </Div>\n                        ) : (\n                          <Wrapper key={i} style={{ display: 'flex' }}>\n                            <Price>\n                              <input\n                                type=\"checkbox\"\n                                value={item}\n                                onClick={() => setSelectedIndex(i)}\n                                onChange={(event) => priceHandler(event, i, item)}\n                                checked={selectedIndex === i && checked && selectedPrice.length > 0}\n                                id={i}\n                              />\n                              <PriceLabel htmlFor={i}>\n                                {' '}\n                                &nbsp;{typeof item[0] === 'string' ? item[0] : `$ ${item[0]}`} - ${item[1]}\n                              </PriceLabel>\n                            </Price>\n                          </Wrapper>\n                        )\n                      )}\n                  </ColorWrapper>\n                </Details>\n              )}\n            </Container>\n          ))}\n          <Shipping>\n            <label htmlFor=\"free-shipping\">Free Shipping</label>\n            <input\n              type=\"checkbox\"\n              id=\"free-shipping\"\n              checked={freeShipping}\n              onChange={(e) => dispatch(selectShipping(e.target.checked))}\n            />\n          </Shipping>\n        </Content>\n      </SingleFilter>\n    </>\n  );\n}\n\nconst Wrapper = styled.div``;\n\nconst SingleFilter = styled.article`\n  cursor: pointer;\n`;\nconst Div = styled.div``;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  svg {\n    vertical-align: middle;\n\n    transition: all 0.3s ease-in-out;\n  }\n`;\n\nconst Content = styled.div``;\nconst Details = styled(motion.div)``;\nconst Container = styled.div`\n  margin-top: 1rem;\n  border-bottom: 1px solid ${color.warm_grey_100};\n  padding: 0 0 1rem 1rem;\n`;\n\nconst Circle = styled.div`\n  width: 1.2rem;\n  height: 1.2rem;\n  border-radius: 50%;\n  background-color: ${({ colored }) => colored};\n  margin-top: 0.5rem;\n  display: grid;\n  place-items: center;\n  svg {\n    color: white;\n  }\n`;\n\nconst Shipping = styled.div`\n  margin-top: 1rem;\n  padding-left: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${color.warm_grey_100};\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Price = styled.div`\n  padding-top: 1rem;\n  width: 20ch;\n\n  /* display: inline-block; */\n  /* margin-right: 1rem; */\n`;\n\nconst ColorWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n\n  @media (max-width: 1030px) {\n    grid-template-columns: repeat(auto-fit, 7rem);\n    justify-items: start;\n    grid-gap: 1rem;\n  }\n`;\n\nconst PriceLabel = styled.label`\n  font-size: 0.9rem;\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/featureData.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/store/store.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/productListReducers.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/types.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/productActions.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Loader.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Message.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/cartReducer.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/cartAction.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/CartIcon.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/CartDropdown.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/CartScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/utilities/svg/CheckCircle.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/addCartItem.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/incrementCartQty.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/decrementCartQty.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/index.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/helper/removeItem.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/userReducer.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/userActions.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProfileScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/CheckoutScreen.jsx",["349","350","351","352"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { FaSort } from 'react-icons/fa';\nimport { Header } from '../components';\nimport { color, shadow, rounded } from '../utilities';\nimport { addedShippingAdress } from '../actions/cartAction';\nimport sofa from '../utilities/svg/checkoutSofa.svg';\nimport pendant from '../utilities/svg/pendant.svg';\n\nexport function CheckoutScreen() {\n  const [countries, setCountries] = useState(JSON.parse(localStorage.getItem('countries')));\n  const [city, setCity] = useState([]);\n  // toggle Dorpdown\n  const [showCountry, setShowCountry] = useState(false);\n  const [showState, setShowState] = useState(false);\n  //= =============\n  const [flagUrl, setFlagUrl] = useState('');\n\n  // state to submit\n  const [countryName, setCountryName] = useState('');\n  const [selectCity, setSelectCity] = useState();\n  const [street, setStreet] = useState('');\n  const [postCode, setPostCode] = useState('');\n  const [token, setToken] = useState('');\n  const [formValidate, setFormValidate] = useState(true);\n\n  // Search Country\n  const [term, setTerm] = useState('');\n  const [newCountries, setNewCountries] = useState(countries);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const userDetails = useSelector((state) => state.userDetails);\n  const userLogin = useSelector((state) => state.userLogin);\n  const cart = useSelector((state) => state.cart);\n  const { user } = userDetails;\n  const { userInfo } = userLogin;\n  const { cartItem } = cart;\n\n  //* Check if user is loged in\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else if (cartItem.length === 0) {\n      history.push('/products');\n    }\n  }, [user, history]);\n\n  // * Fetch countries and flag from Backend\n\n  const getCountries = async () => {\n    try {\n      const { data } = await axios.get('/api/v1/countries');\n\n      setCountries(data);\n      localStorage.setItem('coutries', JSON.stringify(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  //* Select Country\n\n  const selectedCountry = (event) => {\n    setCountryName(event.target.textContent);\n    setFlagUrl(event.target.firstChild.src);\n  };\n\n  //* Get Access Token & Fetch state relative to selected Country\n  const tokenConfig = {\n    headers: {\n      Accept: 'application/json',\n      'api-token': process.env.REACT_APP_GET_TOKEN,\n      'user-email': 'com.admi2017@gmail.com',\n    },\n  };\n  const tokenUrl = 'https://www.universal-tutorial.com/api/getaccesstoken';\n  const getToken = async () => {\n    try {\n      const { data } = await axios.get(tokenUrl, tokenConfig);\n      setToken(data.auth_token);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getState = async () => {\n    const initialUrl = `https://www.universal-tutorial.com/api/states/Canada`;\n    const selectedUrl = `https://www.universal-tutorial.com/api/states/${countryName}`;\n\n    const endPoint = countryName.length === 0 ? initialUrl : selectedUrl;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const res = await axios.get(endPoint, config);\n\n      setCity(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  useEffect(() => {\n    getState();\n  }, [countryName, token]);\n\n  //* Show and hide state, country Dropdown\n\n  const toggleCountrie = () => {\n    setShowCountry(!showCountry);\n    setShowState(false);\n    setTerm('');\n    setNewCountries(countries);\n  };\n  const toggleCities = () => {\n    setShowState(!showState);\n    setShowCountry(false);\n  };\n\n  //* Submit  Data to store\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      addedShippingAdress({\n        country: countryName.length === 0 ? 'Canada' : countryName,\n        city: selectCity,\n        street,\n        postalCode: postCode,\n      })\n    );\n    history.push('/shippingmethod');\n  };\n  useEffect(() => {\n    if (selectCity) {\n      setFormValidate(false);\n    } else {\n      setFormValidate(true);\n    }\n  }, [countryName, selectCity, street, postCode, history]);\n\n  const searchedCountry = (e) => {\n    setTerm(e.target.value);\n    const newCountry = countries.filter((el) => el.name.toLowerCase().includes(term.toLowerCase()));\n    if (term.length > 0) {\n      setNewCountries(newCountry);\n    } else {\n      setNewCountries(countries);\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <IMG src={sofa} alt=\"sofa\" />\n      <Pendant src={pendant} alt=\"Pendant\" />\n      <ProgressWrapper>\n        <ShippingAdress>Shipping Adress</ShippingAdress>\n        <ShippingMethod>Shipping Method</ShippingMethod>\n        <Payment>Payement</Payment>\n        <PlaceOrder>Place Order</PlaceOrder>\n      </ProgressWrapper>\n\n      <Container>\n        <FirstHeading>Shipping Adress</FirstHeading>\n        <Line />\n        <Wrap>\n          <Country onClick={toggleCountrie} showCountry={showCountry}>\n            {countryName ? (\n              <Selected>\n                <span>\n                  <img src={flagUrl} alt={countryName} />\n                  {countryName}\n                </span>\n              </Selected>\n            ) : (\n              <Selected>\n                <span>\n                  <img src=\"https://www.countryflags.io/ca/shiny/64.png\" alt=\"Canada\" />\n                  Canada\n                </span>\n              </Selected>\n            )}\n\n            <Arrow />\n\n            <CountryWrapper showCountry={showCountry}>\n              <SearchCounrty type=\"text\" onClick={(e) => e.stopPropagation()} onChange={searchedCountry} value={term} />\n              {newCountries &&\n                newCountries.map((country) => (\n                  <ImgWrapper key={country._id} onClick={selectedCountry}>\n                    <span>\n                      <img src={country.flag} alt={country.name} />\n\n                      {country.name}\n                    </span>\n                  </ImgWrapper>\n                ))}\n            </CountryWrapper>\n          </Country>\n          <State onClick={toggleCities} showState={showState}>\n            {selectCity ? <Text>{selectCity}</Text> : <Text>Select City</Text>}\n            <Arrow />\n\n            <StateWrapper showState={showState} onClick={(e) => setSelectCity(e.target.textContent)}>\n              {city &&\n                city.map((c, index) => (\n                  <StateWarpp key={index}>\n                    <span>{c.state_name}</span>\n                  </StateWarpp>\n                ))}\n            </StateWrapper>\n          </State>\n          <form onSubmit={submitHandler}>\n            <Street\n              type=\"text\"\n              placeholder=\"Street\"\n              name=\"street\"\n              value={street}\n              required\n              onChange={(e) => setStreet(e.target.value)}\n            />\n            <PostCode\n              type=\"text\"\n              placeholder=\"Postal Code\"\n              name=\"postCode\"\n              value={postCode}\n              required\n              onChange={(e) => setPostCode(e.target.value)}\n            />\n            <ButtonWrapper>\n              <SubmitBtn formValidate={formValidate} disabled={formValidate} type=\"submit\">\n                Continue\n              </SubmitBtn>\n            </ButtonWrapper>\n          </form>\n        </Wrap>\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  width: 40%;\n\n  border: 1px solid ${color.grey_400};\n  border-radius: ${rounded.md};\n  box-shadow: ${shadow.md};\n  margin: 3rem;\n  padding: 3rem;\n`;\n\nconst FirstHeading = styled.h4`\n  font-family: 'avenir_semi';\n  margin-bottom: 3rem;\n`;\nconst Line = styled.div`\n  width: 100%;\n\n  border-top: 2px solid ${color.grey_300};\n`;\n\nconst Wrap = styled.div`\n  @media (max-width: 768px) {\n    padding: 0.5rem;\n  }\n`;\n\n//* Styled Input\nconst styledInput = css`\n  border-radius: ${rounded.md};\n  height: 3rem;\n  width: 35rem;\n  max-width: 35rem;\n  text-indent: 5%;\n  font-size: 1.2rem;\n  color: ${color.grey_800};\n  font-family: 'avenir_regular';\n  box-shadow: ${shadow.lg};\n  margin-top: 2rem;\n  box-shadow: ${({ error }) => error && `0px 0px 0px 2px ${color.red_vivid_500}`};\n  z-index: 1;\n\n  @media (max-width: 768px) {\n    width: 90vw;\n  }\n  outline: none;\n  &:focus {\n    box-shadow: 0px 0px 0px 2px ${color.grey_400};\n  }\n`;\n\nconst PostCode = styled.input`\n  ${styledInput};\n  text-transform: uppercase;\n  ::placeholder {\n    text-transform: capitalize;\n  }\n`;\n\n//* =================\n\n//* Select Country Section ========\nconst Street = styled.input`\n  ${styledInput}\n  text-transform: capitalize;\n`;\nconst wrapper = css`\n  width: auto;\n  height: 100%;\n  padding-top: 1rem;\n  overflow-y: scroll;\n  background-color: ${color.white};\n  box-shadow: ${shadow.lg};\n\n  margin-top: 0.5rem;\n  border-radius: ${rounded.md};\n\n  img {\n    width: 40px;\n\n    margin-right: 1rem;\n\n    vertical-align: middle;\n  }\n`;\n\nconst CountryWrapper = styled.div`\n  ${wrapper}\n  display:${({ showCountry }) => (showCountry ? 'block' : 'none')};\n\n  position: relative;\n  height: 20rem;\n`;\n\nconst Country = styled.div`\n  ${styledInput}\n\n  padding-top: 3.1rem;\n  position: relative;\n  cursor: pointer;\n  z-index: 999;\n\n  box-shadow: ${({ showCountry }) => (showCountry ? `0px 0px 0px 2px ${color.grey_400}` : '')};\n`;\n\nconst Arrow = styled(FaSort)`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`;\n//* =============================\n\nconst wrapp = css`\n  display: grid;\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${color.grey_100};\n  }\n`;\n//* Coutries Flags Wrapper\nconst ImgWrapper = styled.div`\n  ${wrapp}\n  &:first-of-type {\n    margin-top: 3.5rem;\n  }\n`;\n\nconst StateWarpp = styled.div`\n  ${wrapp}\n`;\n\n//* State selection =============\n\nconst State = styled.div`\n  ${styledInput}\n\n  padding-top: 3.1rem;\n  position: relative;\n  cursor: pointer;\n  box-shadow: ${({ showState }) => (showState ? `0px 0px 0px 2px ${color.grey_400}` : '')};\n`;\nconst StateWrapper = styled.div`\n  ${wrapper}\n  height: 15rem;\n  display: ${({ showState }) => (showState ? 'block' : 'none')};\n`;\n\n//* Selected Flag and Country ============\n\nconst Selected = styled.div`\n  position: absolute;\n  top: 0.2rem;\n\n  width: 100%;\n  span {\n    img {\n      width: 40px;\n\n      margin-right: 1rem;\n\n      vertical-align: middle;\n    }\n  }\n`;\nconst Text = styled.p`\n  position: absolute;\n  top: 0.75rem;\n  left: 1rem;\n  width: 100%;\n`;\n//* ==========================\n\nconst SubmitBtn = styled.button`\n  background: transparent;\n  border: 2.5px solid ${color.black};\n  border-radius: ${rounded.sm};\n  padding: 0.75rem 4rem;\n  text-transform: uppercase;\n  font-size: 1.2rem;\n  font-family: 'avenir_semi';\n  cursor: ${({ formValidate }) => (formValidate ? 'not-allowed' : 'pointer')};\n  margin-top: 1.5rem;\n  transition: all 0.6s ease-in-out;\n  &:hover {\n    background-color: ${color.black};\n    color: ${color.white};\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 1rem;\n`;\n\n//* SVG ==========\nconst IMG = styled.img`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 50%;\n`;\nconst Pendant = styled.img`\n  position: absolute;\n  top: 0;\n  right: 20%;\n`;\n\n//* Progress Bar\n\nconst ProgressWrapper = styled.div`\n  display: flex;\n  padding: 3rem 3rem 0 3rem;\n`;\nconst ShippingAdress = styled.div`\n  width: 11rem;\n  border-bottom: 2px solid ${color.scallop_shell};\n  padding-bottom: 1rem;\n  color: ${color.scallop_shell};\n`;\n\nconst ShippingMethod = styled.div`\n  width: 11rem;\n  border-bottom: 2px solid ${color.grey_500};\n  padding-bottom: 1rem;\n  color: ${color.grey_500};\n`;\nconst Payment = styled.div`\n  width: 11rem;\n  border-bottom: 2px solid ${color.grey_500};\n  padding-bottom: 1rem;\n  color: ${color.grey_500};\n`;\nconst PlaceOrder = styled.div`\n  width: 10rem;\n  border-bottom: 2px solid ${color.grey_500};\n  padding-bottom: 1rem;\n  color: ${color.grey_500};\n`;\n\nconst Div = styled.div``;\n\nconst SearchCounrty = styled.input`\n  ${styledInput}\n  height: 2.5rem;\n  width: 28rem;\n  position: absolute;\n  top: 0;\n\n  background-color: ${color.white};\n  box-shadow: 0px 0px 0px 2px ${color.grey_300};\n  /* opacity: ${({ show }) => (show ? 1 : 0)}; */\n\n  &:focus {\n    box-shadow: 0px 0px 0px 2px ${color.scallop_shell};\n  }\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/PaymentScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/PlaceOrderScreen.jsx",["353"],"/* eslint-disable eqeqeq */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { Header } from '../components';\nimport { color, shadow, rounded } from '../utilities';\nimport { addOrder, getOrderDetails } from '../actions/orderAction';\nimport sofa from '../utilities/svg/checkoutSofa.svg';\nimport { formatter } from '../helper/CurrencyFormat';\n\nexport function PlaceOrderScreen() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const userDetails = useSelector((state) => state.userDetails);\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const cart = useSelector((state) => state.cart);\n  const addedOrder = useSelector((state) => state.addedOrder);\n  const { user } = userDetails;\n  const { shippingMethod, shippingAdress, cartItem, payment } = cart;\n  const { order, success } = addedOrder;\n\n  //* Check if user is loged in\n\n  if (!userInfo) {\n    history.push('/login');\n    if (cartItem.length === 0) {\n      history.push('/products');\n    }\n  }\n\n  // useEffect(() => {\n\n  // }, [shippingAdress, shippingMethod, payment, cartItem, user, history]);\n\n  useEffect(() => {}, [user, history]);\n\n  const totalItems = () => (cartItem === [] ? 0 : cartItem.reduce((acc, item) => acc + item.quantity * item.price, 0));\n  const tax = () => {\n    if (payment === 'Paypal') {\n      return totalItems() * 0.17;\n    }\n    return 0;\n  };\n  const total = () => totalItems() + tax() + shippingMethod.price;\n\n  //* Submit  Data to store\n  const submitHandler = () => {\n    dispatch(\n      addOrder({\n        orderItems: cartItem,\n        shippingAdress,\n        shippingMethod,\n        paymentMethod: payment,\n        taxPrice: (totalItems() * 0.17).toFixed(2),\n        totalPrice: totalItems(),\n      })\n    );\n  };\n  useEffect(() => {\n    if (success) {\n      dispatch(getOrderDetails(order._id));\n      history.push(`order/${order._id}`);\n    }\n  }, [success, history, dispatch]);\n  if (!shippingAdress && !shippingMethod && !payment) {\n    return (\n      <TextWrapper>\n        <h3>Shipping Adress & Method is missing</h3>\n\n        <StyledLink to=\"/checkout\"> &larr; Back to Cart</StyledLink>\n      </TextWrapper>\n    );\n  }\n  return (\n    <>\n      <Header />\n      <IMG src={sofa} alt=\"sofa\" />\n\n      <ProgressWrapper>\n        <ShippingAdress>Shipping Adress</ShippingAdress>\n        <ShippingMethod>Shipping Method</ShippingMethod>\n        <Payment>Payement</Payment>\n        <PlaceOrder>Place Order</PlaceOrder>\n      </ProgressWrapper>\n      <MainWrapper>\n        <Container>\n          <FirstHeading>Place Order</FirstHeading>\n          <Line />\n          <Wrap>\n            <Heading>Shipping Adress</Heading>\n            <Content>\n              <b>Adress:</b> &nbsp;{' '}\n              {shippingAdress &&\n                `${shippingAdress.street}, ${shippingAdress.city} ${shippingAdress.postalCode}, ${shippingAdress.country}`}\n            </Content>\n            <Line />\n            <Heading>Payment Method</Heading>\n            <Content>\n              <b>Method:</b> &nbsp;\n              {payment && payment}\n            </Content>\n            <Line />\n            <Heading>Shipping Method</Heading>\n            <Content>\n              <b>Choosed Package:</b> &nbsp;\n              {shippingMethod && shippingMethod.shippingPackage}\n            </Content>\n            <Content>\n              <b>Estimated delivery date:</b> &nbsp;\n              {shippingMethod && shippingMethod.deliveryDate}\n            </Content>\n            <Line />\n            <Heading>Order Items</Heading>\n\n            {cartItem.map((el) => (\n              <Wrapper key={el._id}>\n                <ImageContent>\n                  <Image src={el.image && el.image[0].url} alt={el.name} />\n                  {el.name} &nbsp;({el.subcategory})\n                </ImageContent>\n                <PriceContent>\n                  {`${el.quantity}  X  ${formatter.format(el.price)} = ${formatter.format(el.quantity * el.price)}`}\n                </PriceContent>\n              </Wrapper>\n            ))}\n          </Wrap>\n        </Container>\n        <CheckoutSection>\n          <CheckoutWrapper>\n            <CheckoutHeader>Order summary</CheckoutHeader>\n            <Line />\n            <TotalPrice>\n              <p>Items :</p>\n              <p>{formatter.format(totalItems())}</p>\n            </TotalPrice>\n            <Shipping>\n              <p>Shipping :</p>\n              <p>{shippingMethod && formatter.format(shippingMethod.price)}</p>\n            </Shipping>\n            {payment === 'Paypal' && (\n              <Tax>\n                <p>Tax :</p>\n                <p>{formatter.format(tax())}</p>\n              </Tax>\n            )}\n            <Total>\n              <p>Total :</p>\n              <p>{formatter.format(total())}</p>\n            </Total>\n            <BtnWrapper>\n              <Btn type=\"button\" onClick={submitHandler}>\n                place order\n              </Btn>\n            </BtnWrapper>\n          </CheckoutWrapper>\n        </CheckoutSection>\n      </MainWrapper>\n    </>\n  );\n}\n\nconst MainWrapper = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 60% 30%;\n`;\n\nconst Container = styled.div`\n  width: 90%;\n\n  border: 1px solid ${color.grey_400};\n  border-radius: ${rounded.md};\n  box-shadow: ${shadow.md};\n  margin: 3rem;\n  padding: 2rem;\n  background-color: ${color.white};\n  z-index: 1;\n`;\n\n//* Heading\nconst FirstHeading = styled.h4`\n  font-family: 'avenir_semi';\n  margin-bottom: 3rem;\n`;\nconst Heading = styled.h5`\n  font-family: 'avenir_semi';\n  padding: 1.5rem 0;\n`;\nconst Line = styled.div`\n  width: 100%;\n\n  border-top: 2px solid ${color.grey_300};\n`;\n\nconst Content = styled.p`\n  text-transform: capitalize;\n  color: ${color.grey_800};\n`;\nconst PriceContent = styled.p`\n  color: ${color.grey_800};\n  width: 25%;\n`;\nconst ImageContent = styled.p`\n  text-transform: capitalize;\n  color: ${color.grey_800};\n  width: 70%;\n  img {\n    vertical-align: middle;\n    margin-right: 1rem;\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\n//* =================\n\nconst Wrap = styled.div`\n  @media (max-width: 768px) {\n    padding: 0.5rem;\n  }\n`;\n\nconst Image = styled.img`\n  width: 5%;\n`;\n\n//* ==========================\n\nconst IMG = styled.img`\n  position: absolute;\n  bottom: -50%;\n  right: 0;\n  width: 50%;\n  z-index: -1;\n`;\n\n//* Progress Bar\n\nconst ProgressWrapper = styled.div`\n  display: flex;\n  padding: 3rem 3rem 0 3rem;\n`;\nconst ShippingAdress = styled.div`\n  width: 11rem;\n  border-bottom: 2px solid ${color.scallop_shell};\n  padding-bottom: 1rem;\n  color: ${color.scallop_shell};\n`;\n\nconst ShippingMethod = styled.div`\n  width: 11rem;\n  border-bottom: 2px solid ${color.scallop_shell};\n  padding-bottom: 1rem;\n  color: ${color.scallop_shell};\n`;\nconst Payment = styled.div`\n  width: 11rem;\n  border-bottom: 2px solid ${color.scallop_shell};\n  padding-bottom: 1rem;\n  color: ${color.scallop_shell};\n`;\nconst PlaceOrder = styled.div`\n  width: 10rem;\n  border-bottom: 2px solid ${color.scallop_shell};\n  padding-bottom: 1rem;\n  color: ${color.scallop_shell};\n`;\n\n//* Place Order\n\nconst CheckoutSection = styled.section`\n  width: 100%;\n  margin-top: 3rem;\n`;\nconst CheckoutWrapper = styled.div`\n  width: auto;\n  height: auto;\n  border: 1px solid ${color.grey_400};\n  padding: 1rem;\n  border-radius: ${rounded.sm};\n  box-shadow: ${shadow.md};\n  /* margin: 1rem; */\n  background-color: ${color.white};\n`;\nconst CheckoutHeader = styled.h3`\n  text-align: center;\n  font-size: 1.3rem;\n  padding: 1rem;\n  font-family: 'avenir_semi';\n`;\n\nconst row = css`\n  font-weight: bold;\n  font-size: 1.3rem;\n  color: ${color.grey_600};\n  padding: 1.5rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${color.grey_400};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TotalPrice = styled.div`\n  ${row}\n`;\nconst Shipping = styled.div`\n  ${row}\n`;\nconst Tax = styled.div`\n  ${row}\n`;\nconst Total = styled.div`\n  ${row}\n`;\n\nconst Btn = styled.button`\n  text-transform: uppercase;\n  background-color: ${color.black};\n  color: ${color.white};\n  padding: 1rem 3rem;\n  font-weight: bold;\n  border: 1px solid black;\n  transition: all 0.6s ease-in-out;\n  cursor: pointer;\n  font-family: 'avenir_semi';\n  letter-spacing: 0.125rem;\n  font-size: 1.1rem;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n`;\n\nconst BtnWrapper = styled.div`\n  margin-top: 2.5rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n// Wrapper\n\nconst TextWrapper = styled.div`\n  display: grid;\n  justify-content: center;\n  margin-top: 5rem;\n`;\n\nconst StyledLink = styled(Link)`\n  padding-top: 3rem;\n  font-size: 1.2rem;\n  color: ${color.grey_700};\n  &:hover {\n    color: ${color.scallop_shell};\n    text-decoration: underline;\n    text-underline-offset: 5px;\n  }\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ShippingMethodScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/orderReducer.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/orderAction.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/OrderScreen.jsx",["354","355","356"],"/* eslint-disable no-nested-ternary */\n/* eslint-disable camelcase */\n/* eslint-disable eqeqeq */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { BiRightArrowAlt } from 'react-icons/bi';\nimport { BsCreditCard } from 'react-icons/bs';\nimport { useStripe } from '@stripe/react-stripe-js';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Header, Message, Loader } from '../components';\nimport { color, shadow, rounded } from '../utilities';\nimport { getOrderDetails } from '../actions/orderAction';\nimport { formatter } from '../helper/CurrencyFormat';\nimport { proceedPayment, updatePaypalPayment } from '../actions/paymentAction';\n\nexport function OrderScreen() {\n  const stripe = useStripe();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams();\n  const userDetails = useSelector((state) => state.userDetails);\n  const payment = useSelector((state) => state.payment);\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const updatePaypalState = useSelector((state) => state.updatePaypalPayment);\n  const { user: userInfo } = userDetails;\n  const { loading, details } = orderDetails;\n  const { loading: loadingPaypal, success } = updatePaypalState;\n\n  //* Check if user is loged in\n\n  useEffect(() => {\n    if (Object.keys(userInfo).length === 0) {\n      history.push('/login');\n    }\n  }, [userInfo, history]);\n\n  useEffect(() => {\n    dispatch(getOrderDetails(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (success) {\n      history.push('/success');\n      // dispatch({ type: ADDED_ORDER_RESET });\n    }\n  }, [dispatch, id, success]);\n\n  const total = () => {\n    if (details.paymentMethod && details.paymentMethod === 'Paypal') {\n      return details.taxPrice + details.shippingMethod.price + details.totalPrice;\n    }\n    return details.shippingMethod.price + details.totalPrice;\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const line_items = details.orderItems.map((el) => ({\n      quantity: el.quantity,\n      price_data: {\n        unit_amount: el.price * 100,\n        currency: 'usd',\n        tax_behavior: 'exclusive',\n\n        product_data: {\n          name: `${el.name} ${el.subcategory}`,\n          images: [el.image[0].url],\n        },\n      },\n    }));\n    const item = {\n      line_items,\n      customer_email: details.user.email,\n    };\n\n    dispatch(proceedPayment(item));\n  };\n  useEffect(() => {\n    if (Object.entries(payment.paymentStatus).length > 0) {\n      const redirect = async () => {\n        const { error } = await stripe.redirectToCheckout({ sessionId: payment.paymentStatus.sessionId });\n        if (error) {\n          console.log(error);\n        }\n      };\n      redirect();\n    }\n  }, [payment, stripe]);\n\n  // Paypal\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(updatePaypalPayment(id, paymentResult));\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Header />\n\n          <MainWrapper>\n            <Container>\n              <FirstHeading>Your Order Id: {id}</FirstHeading>\n              <Line />\n              <Wrap>\n                <Heading>Shipping Adress</Heading>\n                <Content>\n                  <b>Adress:</b> &nbsp;{' '}\n                  {details.shippingAdress &&\n                    `${details.shippingAdress.street}, ${details.shippingAdress.city} ${details.shippingAdress.postalCode}, ${details.shippingAdress.country}`}\n                </Content>\n                <Content>\n                  <b>Name: </b> &nbsp;\n                  {details.user && details.user.name}\n                </Content>\n                <Content style={{ textTransform: 'none' }}>\n                  <b>Email</b> &nbsp;\n                  {details.user && details.user.email}\n                </Content>\n                <Line />\n                <Heading>Order status</Heading>\n                <Content>\n                  <Message mt=\"0\" bg={details.isPaid ? 'success' : 'danger'}>\n                    {' '}\n                    {details.isPaid ? 'Paid' : 'Not  Paid'}\n                  </Message>\n                </Content>\n                <Line />\n                <Heading>Payment Method</Heading>\n                <Content>\n                  <b>Method:</b> &nbsp;\n                  {details.paymentMethod}\n                </Content>\n                <Line />\n                <Heading>Shipping Method</Heading>\n                <Content>\n                  <b>Choosed Package:</b> &nbsp;\n                  {details.shippingMethod.shippingPackage}\n                </Content>\n                <Content>\n                  <b>Estimated delivery date:</b> &nbsp;\n                  {details.shippingMethod.deliveryDate}\n                </Content>\n                <Line />\n                <Heading>Delivery status</Heading>\n                <Content>\n                  <Message mt=\"0\" bg={details.isDelivered ? 'success' : 'danger'}>\n                    {' '}\n                    {details.isDelivered ? 'Delivered' : 'Not Delivered'}\n                  </Message>\n                </Content>\n                <Line />\n                <Heading>Order Items</Heading>\n\n                {details.orderItems.map((el) => (\n                  <Wrapper key={el._id}>\n                    <ImageContent>\n                      <Image src={el.image && el.image[0].url} alt={el.name} />\n                      {el.name} &nbsp;({el.subcategory})\n                    </ImageContent>\n                    <PriceContent>\n                      {`${el.quantity}  X  ${formatter.format(el.price)} = ${formatter.format(el.quantity * el.price)}`}\n                    </PriceContent>\n                  </Wrapper>\n                ))}\n              </Wrap>\n            </Container>\n            <CheckoutSection>\n              <CheckoutWrapper>\n                <form onSubmit={submitHandler}>\n                  <CheckoutHeader>Order summary</CheckoutHeader>\n                  <Line />\n                  <TotalPrice>\n                    <p>Items :</p>\n                    <p>{formatter.format(details.totalPrice)}</p>\n                  </TotalPrice>\n                  <Shipping>\n                    <p>Shipping :</p>\n                    <p>{formatter.format(details.shippingMethod.price)}</p>\n                  </Shipping>\n                  {details.paymentMethod === 'Paypal' && (\n                    <Tax>\n                      <p>Tax :</p>\n                      <p>{formatter.format(details.taxPrice)}</p>\n                    </Tax>\n                  )}\n\n                  <Total>\n                    <p>Total :</p>\n                    <p>{formatter.format(total())}</p>\n                  </Total>\n                  {details.paymentMethod !== 'Paypal' ? (\n                    <BtnWrapper isPaid={details.isPaid}>\n                      <Btn type=\"submit\">\n                        <span>\n                          <Card />\n                        </span>\n                        Pay now\n                        <span>\n                          <Arrow />\n                        </span>\n                      </Btn>\n                    </BtnWrapper>\n                  ) : sdkReady || loadingPaypal ? (\n                    <Loader />\n                  ) : details.isPaid ? (\n                    ''\n                  ) : (\n                    <PayPalButton amount={total()} onSuccess={successPaymentHandler} />\n                  )}\n                </form>\n              </CheckoutWrapper>\n            </CheckoutSection>\n          </MainWrapper>\n        </>\n      )}\n    </>\n  );\n}\n\nconst MainWrapper = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 60% 30%;\n  @media (max-width: 1030px) {\n    grid-template-columns: 1fr;\n    grid-auto-flow: row;\n    place-items: center;\n  }\n`;\n\nconst Container = styled.div`\n  width: 90%;\n  border: 1px solid ${color.grey_400};\n  border-radius: ${rounded.md};\n  box-shadow: ${shadow.md};\n  margin: 3rem;\n  padding: 2rem;\n  background-color: ${color.white};\n  z-index: 1;\n`;\n\n//* Heading\nconst FirstHeading = styled.h4`\n  font-family: 'avenir_semi';\n  margin-bottom: 3rem;\n`;\nconst Heading = styled.h5`\n  font-family: 'avenir_semi';\n  padding: 1.5rem 0;\n`;\nconst Line = styled.div`\n  width: 100%;\n  border-top: 2px solid ${color.grey_300};\n`;\n\nconst Content = styled.p`\n  text-transform: capitalize;\n  color: ${color.grey_800};\n`;\nconst PriceContent = styled.p`\n  color: ${color.grey_800};\n  width: 25%;\n`;\nconst ImageContent = styled.p`\n  text-transform: capitalize;\n  color: ${color.grey_800};\n  width: 70%;\n  img {\n    vertical-align: middle;\n    margin-right: 1rem;\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\n//* =================\n\nconst Wrap = styled.div`\n  @media (max-width: 768px) {\n    padding: 0.5rem;\n  }\n`;\n\nconst Image = styled.img`\n  width: 5%;\n`;\n\n//* Place Order\n\nconst CheckoutSection = styled.section`\n  width: 100%;\n  margin-top: 3rem;\n`;\nconst CheckoutWrapper = styled.div`\n  width: auto;\n  height: auto;\n  border: 1px solid ${color.grey_400};\n  padding: 1rem;\n  border-radius: ${rounded.sm};\n  box-shadow: ${shadow.md};\n  /* margin: 1rem; */\n  background-color: ${color.white};\n`;\nconst CheckoutHeader = styled.h3`\n  text-align: center;\n  font-size: 1.3rem;\n  padding: 1rem;\n  font-family: 'avenir_semi';\n`;\n\nconst row = css`\n  font-weight: bold;\n  font-size: 1.3rem;\n  color: ${color.grey_600};\n  padding: 1.5rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${color.grey_400};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TotalPrice = styled.div`\n  ${row}\n`;\nconst Shipping = styled.div`\n  ${row}\n`;\nconst Tax = styled.div`\n  ${row}\n`;\nconst Total = styled.div`\n  ${row}\n`;\n\nconst Btn = styled.button`\n  text-transform: capitalize;\n  background-color: ${color.black};\n  color: ${color.white};\n  padding: 1rem 3rem;\n  font-weight: bold;\n  border: 1px solid black;\n  transition: all 0.6s ease-in-out;\n  cursor: pointer;\n  font-family: 'avenir_semi';\n  letter-spacing: 0.125rem;\n  font-size: 1.1rem;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n`;\nconst Arrow = styled(BiRightArrowAlt)`\n  opacity: 0;\n  color: ${color.white};\n  font-size: 1.5rem;\n  vertical-align: middle;\n`;\nconst BtnWrapper = styled.div`\n  margin-top: 2.5rem;\n  width: 100%;\n  display: ${({ isPaid }) => (isPaid ? 'none' : 'flex')};\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    ${Arrow} {\n      opacity: 1;\n      transform: translateX(5px);\n      transition: all 0.6s ease-in-out;\n    }\n  }\n`;\nconst Card = styled(BsCreditCard)`\n  color: ${color.white};\n  font-size: 1.5rem;\n  vertical-align: middle;\n  margin-right: 1rem;\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/paymentReducer.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/paymentAction.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/SuccessPaymentScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/CancelPaymentScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/PaypalButton.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/UserListScreen.jsx",["357"],"/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FaRegTimesCircle, FaTrashAlt } from 'react-icons/fa';\nimport { FcOk } from 'react-icons/fc';\nimport { FiEdit } from 'react-icons/fi';\nimport { getUsersList, showModal } from '../actions/userActions';\nimport { Loader, Message, Header, Modal } from '../components';\nimport { color, shadow } from '../utilities';\nimport { GET_ID } from '../actions/types';\n\nexport function UsersListScreen() {\n  const usersList = useSelector((state) => state.usersList);\n  const userLogin = useSelector((state) => state.userLogin);\n  const deleteUser = useSelector((state) => state.deleteUser);\n  const userInfo = useSelector((state) => state.userInfo);\n  const { user } = userInfo;\n\n  const { userInfo: isLogin } = userLogin;\n  const { success: successDelete } = deleteUser;\n  const history = useHistory();\n  const { error, users, loading } = usersList;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLogin && isLogin.isAdmin) {\n      dispatch(getUsersList());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, successDelete, user, history, isLogin]);\n\n  const deleteHandler = (id) => {\n    dispatch(showModal());\n    dispatch({ type: GET_ID, payload: id });\n  };\n\n  return (\n    <>\n      <Header />\n\n      <Heading>Users</Heading>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message bg=\"danger\" mt=\"4rem\">\n          {error}\n        </Message>\n      ) : (\n        <TableWrapper>\n          <Table>\n            <thead>\n              <tr>\n                <Th>User Id</Th>\n                <Th>Name</Th>\n                <Th>Email</Th>\n                <Th>Admin</Th>\n\n                <Th>{}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((usr) => (\n                <Tr key={usr._id}>\n                  <Td>{usr._id}</Td>\n                  <Td>{usr.name}</Td>\n                  <Td>\n                    <A href={`mailto:${usr.email}`}>{usr.email}</A>\n                  </Td>\n                  <Td>{usr.isAdmin ? <Check /> : <Times />}</Td>\n                  <Td>\n                    <IconsWrapper>\n                      <Link to={`/admin/user/${usr._id}`}>\n                        {' '}\n                        <Edit />\n                      </Link>\n                      <Button type=\"button\" onClick={() => deleteHandler(usr._id)}>\n                        <Trash />\n                      </Button>\n                    </IconsWrapper>\n                  </Td>\n                  <Modal text=\"Do you want to delete this user ?\" />\n                </Tr>\n              ))}\n            </tbody>\n          </Table>\n        </TableWrapper>\n      )}\n    </>\n  );\n}\n\nconst Heading = styled.h2`\n  padding-top: 2rem;\n  padding-left: 2rem;\n`;\nconst TableWrapper = styled.div`\n  padding-top: 1rem;\n  padding-left: 2rem;\n  @media (max-width: 868px) {\n    overflow-x: scroll;\n  }\n`;\n\nconst Table = styled.table`\n  border: 1px solid ${color.grey_400};\n  width: 90%;\n  border-collapse: collapse;\n  box-shadow: ${shadow.md};\n`;\nconst Td = styled.td`\n  /* border-top: 1px solid ${color.grey_400}; */\n  border-bottom: 1px solid ${color.grey_400};\n  padding: 1rem;\n`;\nconst Th = styled.th`\n  padding: 1rem;\n  text-align: start;\n  text-transform: uppercase;\n  border-bottom: 2px solid ${color.grey_400};\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${color.grey_700};\n  text-transform: uppercase;\n  letter-spacing: 0.1rem;\n  &:hover {\n    color: ${color.scallop_shell};\n  }\n`;\nconst Tr = styled.tr`\n  padding: 1rem;\n\n  &:hover {\n    background-color: ${color.grey_100};\n    box-shadow: ${shadow.md};\n    ${StyledLink} {\n      color: ${color.scallop_shell};\n    }\n  }\n`;\n\nconst Times = styled(FaRegTimesCircle)`\n  color: ${color.red_vivid_500};\n  font-size: 1.3rem;\n`;\nconst Check = styled(FcOk)`\n  font-size: 1.3rem;\n`;\nconst A = styled.a`\n  text-decoration: none;\n  color: ${color.grey_700};\n`;\n\nconst Trash = styled(FaTrashAlt)`\n  margin-left: 1.5rem;\n  font-size: 1.2rem;\n  color: ${color.red_vivid_500};\n  cursor: pointer;\n`;\nconst Edit = styled(FiEdit)`\n  font-size: 1.2rem;\n  color: ${color.grey_700};\n`;\n\nconst Button = styled.button`\n  background: transparent;\n`;\n\nconst IconsWrapper = styled.div`\n  display: flex;\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/Modal.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/UserScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProductsListScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/ProductEditScreen.jsx",["358"],"/* eslint-disable no-unused-expressions */\n/* eslint-disable no-plusplus */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport styled, { css } from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FaDollarSign, FaSort } from 'react-icons/fa';\nimport { AiOutlineCloudUpload } from 'react-icons/ai';\nimport { BsTrash, BsChevronRight } from 'react-icons/bs';\nimport axios from 'axios';\nimport { Header, Loader, Message, Error, DropDownInput, LoaderSemiCircle } from '../components';\nimport { updateProductAC, detailProduct } from '../actions/productActions';\nimport { color, rounded, shadow } from '../utilities';\nimport { UPDATE_PRODUCT_RESET, USER_UPDATE_RESET } from '../actions/types';\n\nexport function ProductEditScreen() {\n  const [colorsList, setColorsList] = useState([]);\n  const [addedColor, setAddedColor] = useState('');\n  const [featuresList, setFeaturesList] = useState([]);\n  const [addedFeature, setAddedFeature] = useState('');\n\n  const [showDropDown, setShowDropDown] = useState(false);\n  const [showDropDownCategory, setShowDropDownCategory] = useState(false);\n  const [selectedSubcategory, setSelectedSubcategory] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [mainImage, setMainImage] = useState('');\n  const [imageList, setImageList] = useState([]);\n\n  const [loadingMainImg, setLoadingMainImg] = useState(false);\n  const [loadingImgs, setloadingImgs] = useState(false);\n\n  const [cloudinaryMainImg, setCloudinaryMainImg] = useState([]);\n  const [cloudinaryImgs, setCloudinaryImgs] = useState([]);\n  const [submitFeature, setSubmitFeature] = useState([]);\n  const [submitColors, setSubmitColors] = useState([]);\n  const [submitMainImg, setSubmitMainImg] = useState();\n  const [submitImgs, setSubmitImgs] = useState([]);\n  const [imgWithoutId, setImgWithoutId] = useState([]);\n\n  const ref = useRef();\n  const userInfo = useSelector((state) => state.userInfo);\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo: userInfos } = userLogin;\n  const { loading, user, error } = userInfo;\n  const updateProduct = useSelector((state) => state.updateProduct);\n  const { success: updateSuccess } = updateProduct;\n  const productDetail = useSelector((state) => state.productDetail);\n  const { loading: loadingProduct, error: errorProduct, product } = productDetail;\n  const {\n    name,\n    colors,\n    Features,\n    reviews,\n    starts,\n    shipping,\n    _id,\n    image,\n    images,\n    description,\n    price,\n    subcategory,\n    available,\n    category,\n  } = product;\n\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\n\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(detailProduct(id));\n    if (updateSuccess) {\n      dispatch({ type: UPDATE_PRODUCT_RESET });\n    }\n  }, [dispatch, id, updateSuccess]);\n\n  useEffect(() => {\n    if (updateSuccess) {\n      history.push('/admin/products');\n    }\n  }, [updateSuccess, history]);\n\n  let currentValues;\n  if (user) {\n    currentValues = {\n      name,\n      colors,\n      Features,\n      reviews,\n      starts,\n      shipping,\n      _id,\n      image,\n      images,\n      description,\n      price,\n      subcategory,\n      available,\n      category,\n    };\n  } else {\n    currentValues = {\n      name: '',\n      colors: '',\n      Features: '',\n      reviews: '',\n      starts: '',\n      shipping: '',\n      _id: '',\n      image: '',\n      images: '',\n      description: '',\n      price: '',\n      subcategory: '',\n      available: '',\n      category: '',\n    };\n  }\n\n  const subcategoryList = [\n    'decoration',\n    'dining chair',\n    'lounge chair',\n    'coffe table',\n    'dining table',\n    'wall lamp',\n    'bar stool',\n    'sofa',\n    'tableware',\n    'cushion',\n    'foor lamp',\n  ];\n  const categories = ['furniture', 'accessories', 'lighting'];\n\n  //* Preparing data to be submitted ======================\n  useEffect(() => {\n    const featuresArr = featuresList.map((el) => el.Features.charAt(0).toUpperCase() + el.Features.slice(1));\n    setSubmitFeature(featuresArr);\n    if (colorsList.length > 0) {\n      const colorsArr = colorsList.map((el) => el.color.toUpperCase());\n      setSubmitColors(colorsArr);\n    }\n\n    if (cloudinaryMainImg.length > 0) {\n      setSubmitMainImg(cloudinaryMainImg);\n    } else {\n      setSubmitMainImg(image && [{ url: image[0].url }]);\n    }\n\n    let getIndex;\n\n    if (cloudinaryImgs.length > 0) {\n      getIndex = imageList.findIndex((el) => el.url.includes('data'));\n\n      if (getIndex === -1) {\n        setSubmitImgs(imgWithoutId);\n      } else if (getIndex === 0) {\n        setSubmitImgs(cloudinaryImgs);\n      } else {\n        const arr = imgWithoutId.slice(0, getIndex);\n\n        setSubmitImgs([...arr, ...cloudinaryImgs]);\n      }\n    } else {\n      setSubmitImgs(imgWithoutId);\n    }\n  }, [featuresList, colorsList, cloudinaryMainImg, cloudinaryImgs, mainImage, imageList, imgWithoutId, image]);\n\n  //*   Colors functions /////////////////////////\n\n  const addColorHandler = (e) => {\n    const addColor = e.target.value.toLowerCase();\n    const clrs = [...addColor];\n    const isFounded = clrs.some((cl) => !letters.includes(cl));\n    if (!isFounded) {\n      setAddedColor(addColor);\n    }\n  };\n\n  const submitColorsHandler = (event) => {\n    event.stopPropagation();\n\n    if (event.code === 'Enter') {\n      if (addedColor.length === 6) {\n        setColorsList((prevState) => [...prevState, { color: `#${addedColor}`, objectID: uuidv4() }]);\n        setAddedColor('');\n      }\n    }\n  };\n  const addColorFromBtn = (e) => {\n    e.stopPropagation();\n    if (addedColor.length === 6) {\n      setColorsList((prevState) => [...prevState, { color: `#${addedColor}`, objectID: uuidv4() }]);\n      setAddedColor('');\n    }\n  };\n  const removeColorHandler = (ID) => {\n    if (ID) {\n      const newList = colorsList.filter((el) => el.objectID !== ID);\n      setColorsList(newList);\n    }\n  };\n\n  useEffect(() => {\n    if (product && colors) {\n      const cl = colors.map((el) => ({ objectID: uuidv4(), color: el }));\n\n      setColorsList(cl);\n    }\n    if (imageList) {\n      const im = imageList.map((el) => ({ url: el.url }));\n      setImgWithoutId(im);\n    }\n  }, [product, colors, imageList]);\n\n  //* Features Functions ////////////////////////////\n\n  const addFeatureHandler = (e) => {\n    setAddedFeature(e.target.value.toLowerCase());\n  };\n\n  const submitFeatureHandler = (event) => {\n    event.stopPropagation();\n    if (event.code === 'Enter') {\n      if (addedFeature.length > 0) {\n        setFeaturesList((prevState) => [...prevState, { Features: addedFeature, objectID: uuidv4() }]);\n\n        setAddedFeature('');\n      }\n    }\n  };\n  const addFeatureFromBtn = (e) => {\n    e.stopPropagation();\n    if (addedFeature.length > 0) {\n      setFeaturesList((prevState) => [...prevState, { Features: addedFeature, objectID: uuidv4() }]);\n      setAddedFeature('');\n    }\n  };\n  const removeFeatureHandler = (ID) => {\n    if (ID) {\n      const newList = featuresList.filter((el) => el.objectID !== ID);\n      setFeaturesList(newList);\n    }\n  };\n\n  useEffect(() => {\n    if (product && Features) {\n      const newFeatureArray = Features.map((el) => ({ objectID: uuidv4(), Features: el }));\n\n      setFeaturesList(newFeatureArray);\n      setSelectedSubcategory(subcategory);\n      setSelectedCategory(category);\n      setMainImage(image[0].url);\n    }\n\n    setImageList(images);\n  }, [product, Features, subcategory, category, image, images]);\n\n  //* Category & Subcategory Dropdown ////////////////////////\n\n  const selectedSubcategoryHandler = (e) => {\n    setSelectedSubcategory(e.target.textContent);\n    setShowDropDown(!showDropDown);\n  };\n  const selectedCategoryHandler = (e) => {\n    setSelectedCategory(e.target.textContent);\n    setShowDropDownCategory(!showDropDownCategory);\n  };\n\n  const deleteImageHandeler = (Id) => {\n    const newImageList = imageList.filter((el) => el._id !== Id);\n    setImageList(newImageList);\n  };\n  //* Submitting to Uploaded photos to backend ///////////////\n\n  const uploadImage = async (base64EncodedImage) => {\n    setLoadingMainImg(true);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfos.token}`,\n      },\n    };\n\n    const jsonData = JSON.stringify({ uri: base64EncodedImage });\n\n    try {\n      const { data } = await axios.post('/api/v1/upload', jsonData, config);\n      setCloudinaryMainImg([{ url: data }]);\n      setLoadingMainImg(false);\n    } catch (error) {\n      console.error(error);\n      setLoadingMainImg(false);\n    }\n  };\n\n  //* Upload Multiple Images //////////////////////////////\n\n  const uploadMultipleImages = async (imgArr) => {\n    setloadingImgs(true);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfos.token}`,\n      },\n    };\n    let arr;\n    if (imgArr.length > 0) {\n      arr = imgArr.map((el) => ({ uri: el.url }));\n    }\n    const payload = { dataList: arr };\n\n    try {\n      const { data } = await axios.post('/api/v1/upload/multiple', payload, config);\n      setCloudinaryImgs(data);\n      setloadingImgs(false);\n    } catch (error) {\n      console.error(error);\n      setloadingImgs(false);\n    }\n  };\n\n  //* Display Uploaded Main Image  ////////////////////////\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setMainImage(reader.result);\n      uploadImage(reader.result);\n    };\n  };\n\n  const handleInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const fileToDataUri = (imgs) =>\n    new Promise((res) => {\n      const reader = new FileReader();\n      const { type, imgName, size } = imgs;\n      reader.addEventListener('load', () => {\n        res({\n          url: reader.result,\n          imgName,\n          type,\n          size,\n        });\n      });\n\n      reader.readAsDataURL(imgs);\n    });\n\n  const uploadImageHandler = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const newImagesPromises = [];\n      for (let i = 0; i < e.target.files.length; i++) {\n        newImagesPromises.push(fileToDataUri(e.target.files[i]));\n      }\n      const newImages = await Promise.all(newImagesPromises);\n      const newImgArray = newImages.map((el) => ({ _id: uuidv4(), url: el.url }));\n      uploadMultipleImages(newImgArray);\n\n      setImageList([...imageList, ...newImgArray]);\n    }\n    e.target.value = '';\n  };\n\n  const scrollRight = () => {\n    ref.current.scrollBy(350, 0);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message bg=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Header />\n          {loadingProduct && <Loader />}\n          {errorProduct && <Message bg=\"danger\">{errorProduct}</Message>}\n          <Container>\n            <UserProfile>\n              <Formik\n                initialValues={currentValues}\n                validationSchema={Yup.object({\n                  Features: Yup.array().required('Please enter your features'),\n                  name: Yup.string()\n                    .min(2, 'Must at least 2 characters long.')\n                    .max(255, 'Name Must less than 255 characters')\n                    .required('Please enter your Name'),\n                  colors: Yup.array().required('Please add colors'),\n                  shipping: Yup.boolean().required('Please confim if shipping is included'),\n                  image: Yup.array().required('Please add main image'),\n                  description: Yup.string().required('Please add description'),\n                  iamges: Yup.array(),\n                  price: Yup.number().required('Please add product price'),\n                  available: Yup.boolean().required('Please confirm if the product is available'),\n                  category: Yup.string().required('Please add category'),\n                  subcategory: Yup.string().required('Please add subcategory'),\n                })}\n                onSubmit={(values, { resetForm, setSubmitting }) => {\n                  setSubmitting(true);\n                  const updatedProduct = updateProductAC(id, {\n                    name: values.name,\n                    colors: submitColors,\n                    description: values.description,\n                    shipping: values.shipping,\n                    Features: submitFeature,\n                    price: values.price,\n                    available: values.available,\n                    subcategory: selectedSubcategory,\n                    category: selectedCategory,\n                    image: submitMainImg,\n                    images: submitImgs,\n                  });\n\n                  dispatch(updatedProduct);\n                  console.log({\n                    name: values.name,\n                    colors: submitColors,\n                    description: values.description,\n                    shipping: values.shipping,\n                    Features: submitFeature,\n                    price: values.price,\n                    available: values.available,\n                    subcategory: selectedSubcategory,\n                    category: selectedCategory,\n                    image: submitMainImg,\n                    images: submitImgs,\n                  });\n\n                  resetForm();\n                  setSubmitting(false);\n                }}\n                enableReinitialize\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n                  <form\n                    autoComplete=\"off\"\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    <Back to=\"/admin/products\"> &larr; Go Back</Back>\n                    <Heading>Product Details</Heading>\n                    <InputWrapper>\n                      <div>\n                        <label htmlFor=\"name\">\n                          {' '}\n                          <b>Name</b>\n                        </label>\n                      </div>\n                      <NameInput\n                        error={touched.name && errors.name}\n                        id=\"name\"\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.name}\n                        placeholder=\"Name\"\n                      />\n                      <Error touched={touched.name} message={errors.name} />\n                    </InputWrapper>\n                    <DropDownInput\n                      itemListFromState={colors}\n                      itemsList={colorsList}\n                      itemToAdd={addedColor}\n                      addItemHandler={addColorHandler}\n                      addItemFromBtn={addColorFromBtn}\n                      keyPressItemHandler={submitColorsHandler}\n                      removeItemHandler={removeColorHandler}\n                      inputTextContent=\"Colors\"\n                      colorBool\n                      featureBool={false}\n                      maxLength={6}\n                      uppercase\n                    />\n                    <InputWrapper>\n                      <div>\n                        <label htmlFor=\"description\">\n                          {' '}\n                          <b>Description</b>\n                        </label>\n                      </div>\n                      <Textarea\n                        cols=\"50\"\n                        error={touched.description && errors.description}\n                        id=\"description\"\n                        type=\"description\"\n                        name=\"description\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.description}\n                        placeholder=\"Description\"\n                      />\n\n                      <Error touched={touched.email} message={errors.email} />\n                    </InputWrapper>\n                    <InputWrapper>\n                      <label htmlFor=\"shipping\">\n                        <input\n                          id=\"shipping\"\n                          type=\"checkbox\"\n                          name=\"shipping\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          checked={values.shipping}\n                        />{' '}\n                        &nbsp; Shipping\n                      </label>\n                    </InputWrapper>\n                    <DropDownInput\n                      itemListFromState={Features}\n                      itemsList={featuresList}\n                      itemToAdd={addedFeature}\n                      addItemHandler={addFeatureHandler}\n                      addItemFromBtn={addFeatureFromBtn}\n                      keyPressItemHandler={submitFeatureHandler}\n                      removeItemHandler={removeFeatureHandler}\n                      inputTextContent=\"Features\"\n                      featureBool\n                      colorBool={false}\n                      maxLength={30}\n                    />\n                    <PriceInputWrapper>\n                      <div>\n                        <label htmlFor=\"price\">\n                          {' '}\n                          <b>Price</b>\n                        </label>\n                      </div>\n                      <PriceInput\n                        error={touched.price && errors.price}\n                        id=\"price\"\n                        type=\"text\"\n                        price=\"price\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.price}\n                        placeholder=\"Price\"\n                        name=\"price\"\n                      />\n                      <Dollar />\n                      <Error touched={touched.price} message={errors.price} />\n                    </PriceInputWrapper>\n                    <AvailableInput>\n                      <label htmlFor=\"available\">\n                        <input\n                          id=\"available\"\n                          type=\"checkbox\"\n                          name=\"available\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          checked={values.available}\n                        />{' '}\n                        &nbsp; Available\n                      </label>\n                    </AvailableInput>\n                    <InputWrapper>\n                      <label>\n                        &nbsp; <b>Subcategory</b>\n                      </label>\n                      <SubcategoryInput\n                        showDropDownSubCategory={showDropDown}\n                        onClick={() => setShowDropDown(!showDropDown)}\n                      >\n                        <Arrow />\n\n                        <ItemContent>{selectedSubcategory}</ItemContent>\n                      </SubcategoryInput>\n                      <SubcategoryWrap showDropDownSubCategory={showDropDown} onClick={selectedSubcategoryHandler}>\n                        {subcategoryList.map((item, index) => (\n                          <SubCategoryItems showDropDownSubCategory={showDropDown} key={index}>\n                            <span>{item}</span>\n                          </SubCategoryItems>\n                        ))}\n                      </SubcategoryWrap>\n                    </InputWrapper>\n\n                    <InputWrapper style={{ marginTop: '3rem' }}>\n                      <label>\n                        &nbsp; <b>Category</b>\n                      </label>\n                      <CategoryInput\n                        showDropDownCategory={showDropDownCategory}\n                        onClick={() => setShowDropDownCategory(!showDropDownCategory)}\n                      >\n                        <Arrow />\n                        <ItemContent>{selectedCategory}</ItemContent>\n                      </CategoryInput>\n                      <CategoryWrap showDropDownCategory={showDropDownCategory} onClick={selectedCategoryHandler}>\n                        {categories.map((item, i) => (\n                          <CategoryItems showDropDownCategory={showDropDownCategory} key={i}>\n                            <span>{item}</span>\n                          </CategoryItems>\n                        ))}\n                      </CategoryWrap>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <div style={{ marginTop: '3rem' }}>\n                        <b>Add Main Image</b>\n                      </div>\n                      <UploadBtn>\n                        <ImgLabel htmlFor=\"image\">\n                          <span>\n                            <AiOutlineCloudUpload />\n                            &nbsp;\n                          </span>{' '}\n                          Upload Image\n                        </ImgLabel>\n                        {loadingMainImg && (\n                          <>\n                            <span style={{ paddingLeft: '1rem' }}> Uploading Image...</span>\n                            <LoaderSemiCircle />\n                          </>\n                        )}\n                      </UploadBtn>\n\n                      <ImageInput type=\"file\" id=\"image\" onChange={handleInputChange} value=\"\" name=\"image\" />\n                    </InputWrapper>\n\n                    <ImageWrapper image={mainImage.length > 0}>\n                      <ImgWrapp />\n\n                      <Image url={mainImage} />\n\n                      <RemoveBtn onClick={() => setMainImage('')} />\n                    </ImageWrapper>\n\n                    <InputWrapper>\n                      <div style={{ marginTop: '3rem' }}>\n                        <b>Add Images</b>\n                      </div>\n                      <UploadBtn>\n                        <ImgLabel htmlFor=\"images\">\n                          <span>\n                            <AiOutlineCloudUpload />\n                            &nbsp;\n                          </span>{' '}\n                          Upload Images\n                        </ImgLabel>\n                        {loadingImgs && (\n                          <>\n                            <span style={{ paddingLeft: '1rem' }}> Uploading Image...</span>\n                            <LoaderSemiCircle />\n                          </>\n                        )}\n                      </UploadBtn>\n\n                      <ImageInput\n                        type=\"file\"\n                        id=\"images\"\n                        value=\"\"\n                        onChange={uploadImageHandler}\n                        multiple\n                        name=\"images\"\n                      />\n                    </InputWrapper>\n                    <RightBlur>\n                      <ImagesContainer ref={ref}>\n                        {imageList &&\n                          imageList.map((img) => (\n                            <ImagesWrapper key={img._id}>\n                              <ImgWrapp />\n                              <Image url={img.url} />\n\n                              <RemoveBtn onClick={() => deleteImageHandeler(img._id)} />\n                            </ImagesWrapper>\n                          ))}\n                      </ImagesContainer>\n                      {imageList && imageList.length > 2 && <Chevron onClick={scrollRight} />}\n                    </RightBlur>\n\n                    <ButtonWrapper>\n                      <SubmitBtn className=\"submit-btn\" type=\"submit\" onClick={handleSubmit} disabled={isSubmitting}>\n                        Update\n                      </SubmitBtn>\n                    </ButtonWrapper>\n                  </form>\n                )}\n              </Formik>\n            </UserProfile>\n          </Container>\n        </>\n      )}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  place-items: center;\n  padding: 2rem;\n  margin-top: 4rem;\n  height: 200vh;\n`;\nconst UserProfile = styled.section``;\n\nconst Heading = styled.h3`\n  font-family: 'avenir_bold';\n  line-height: 1rem;\n  margin-top: 3rem;\n  padding-bottom: 2rem;\n`;\n\nconst InputWrapper = styled.div``;\n\nconst styledInput = css`\n  border-radius: ${rounded.md};\n  height: 3rem;\n  width: 35rem;\n  max-width: 30rem;\n  text-indent: 5%;\n  font-size: 1.2rem;\n  color: ${color.grey_800};\n  background-color: ${color.white};\n  font-family: 'avenir_regular';\n  box-shadow: ${shadow.lg};\n  margin-top: 1rem;\n  ${'' /* margin-bottom: 2rem; */}\n  box-shadow: ${({ error }) =>\n    error ? `0px 0px 0px 2px ${color.red_vivid_500}` : `0px 0px 0px 2px ${color.grey_300}`};\n\n  @media (max-width: 768px) {\n    width: 90vw;\n  }\n  outline: none;\n  &:focus {\n    box-shadow: 0px 0px 0px 2px ${color.grey_600};\n  }\n`;\nconst ImageInput = styled.input`\n  ${styledInput};\n  display: none;\n`;\n\nconst ImgLabel = styled.label`\n  border: 2px solid ${color.grey_300};\n  display: inline-block;\n  padding: 1rem 2rem;\n  cursor: pointer;\n  border-radius: ${rounded.md};\n  margin: 3rem 0;\n  font-size: 1.2rem;\n  transition: all 0.3s ease-in-out;\n  svg {\n    vertical-align: middle;\n    font-size: 1.6rem;\n    color: ${color.grey_600};\n  }\n\n  &:hover {\n    background-color: ${color.black};\n    color: ${color.white};\n    svg {\n      color: ${color.white};\n    }\n  }\n`;\n\nconst NameInput = styled.input`\n  ${styledInput}\n  margin-bottom:2rem;\n`;\n\nconst PriceInput = styled.input`\n  ${styledInput}\n  margin-bottom:2rem;\n`;\nconst AvailableInput = styled.div`\n  margin-bottom: 3rem;\n  margin-top: 1rem;\n`;\n\nconst PriceInputWrapper = styled.div`\n  position: relative;\n`;\n\nconst Dollar = styled(FaDollarSign)`\n  position: absolute;\n  top: 3rem;\n  right: 1rem;\n  color: ${color.grey_500};\n  font-size: 1.2rem;\n`;\n\nconst Textarea = styled.textarea`\n  ${styledInput}\n  height: 10rem;\n  padding: 1rem;\n`;\n\nconst SubmitBtn = styled.button`\n  background: transparent;\n  border: 2.5px solid ${color.black};\n  border-radius: ${rounded.sm};\n  padding: 0.75rem 4rem;\n  text-transform: uppercase;\n  font-size: 1.2rem;\n  font-family: 'avenir_semi';\n  cursor: pointer;\n  margin-top: 1.5rem;\n  transition: all 0.6s ease-in-out;\n  &:hover {\n    background-color: ${color.black};\n    color: ${color.white};\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 5rem;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Back = styled(Link)`\n  margin-bottom: 3rem;\n  font-size: 1.2rem;\n  color: ${color.grey_700};\n  &:hover {\n    color: ${color.scallop_shell};\n    text-decoration: underline;\n    text-underline-offset: 5px;\n  }\n`;\n\nconst Arrow = styled(FaSort)`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`;\n\nconst SubcategoryInputMain = css`\n  position: relative;\n  cursor: pointer;\n`;\nconst ItemContent = styled.div`\n  position: absolute;\n  top: 0.75rem;\n  left: 0;\n  width: 100%;\n  text-transform: capitalize;\n`;\nconst wrapper = css`\n  width: 30rem;\n  height: 100%;\n  padding-top: 0.7rem;\n  padding-bottom: 0.7rem;\n  padding-right: 1rem;\n  cursor: pointer;\n  background-color: ${color.white};\n`;\n\nconst items = css`\n  position: relative;\n\n  span {\n    text-transform: capitalize;\n    padding: 1.5rem;\n    font-size: 1.2rem;\n    width: 30ch;\n  }\n  &:first-of-type {\n    margin-top: 1.2rem;\n  }\n  &:last-of-type {\n    margin-bottom: 1rem;\n  }\n  &:hover {\n    background-color: ${color.grey_100};\n  }\n`;\n\nconst wrap = css`\n  width: 30rem;\n  height: auto;\n  background-color: ${color.white};\n  padding-top: 0.125rem;\n\n  box-shadow: ${shadow.xl};\n`;\n\n//! ////////////////////////////////\n\nconst SubcategoryInput = styled.div`\n  ${styledInput}\n  ${SubcategoryInputMain}\n`;\n\nconst SubCategoryItems = styled.div`\n  ${wrapper}\n  ${items}\n  display: ${({ showDropDownSubCategory }) => (showDropDownSubCategory ? 'block' : 'none')};\n`;\n\nconst SubcategoryWrap = styled.div`\n  ${wrap}\n\n  display: ${({ showDropDownSubCategory }) => (showDropDownSubCategory ? 'block' : 'none')};\n`;\n\nconst CategoryInput = styled.div`\n  ${styledInput}\n  ${SubcategoryInputMain}\n`;\n\nconst CategoryItems = styled.div`\n  ${wrapper}\n  ${items}\n  display: ${({ showDropDownCategory }) => (showDropDownCategory ? 'block' : 'none')};\n`;\n\nconst CategoryWrap = styled.div`\n  ${wrap}\n  display: ${({ showDropDownCategory }) => (showDropDownCategory ? 'block' : 'none')};\n`;\n\nconst ImgWrapp = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  border-radius: ${rounded.sm};\n  z-index: 3;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n    transition: all 0.4s ease-in;\n  }\n`;\nconst RemoveBtn = styled(BsTrash)`\n  font-size: 1.2rem;\n  color: ${color.white};\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n  opacity: 0;\n  z-index: 3;\n`;\n\nconst ImageWrapper = styled.div`\n  position: relative;\n  width: 10rem;\n  transition: all 0.3s ease-in-out;\n  display: ${({ image }) => (image ? 'block' : 'none')};\n  &:hover {\n    ${RemoveBtn} {\n      opacity: 1;\n    }\n    ${ImgWrapp} {\n      opacity: 1;\n      transition: all 0.4s ease-in;\n    }\n  }\n`;\nconst Image = styled.div`\n  width: 10rem;\n  height: 10rem;\n\n  border: 2px solid ${color.grey_400};\n  border-radius: ${rounded.sm};\n  cursor: pointer;\n  background-image: url(${({ url }) => url});\n  background-size: cover;\n  background-repeat: no-repeat;\n  transition: all 0.6s ease-in-out;\n  position: relative;\n`;\n\nconst ImagesWrapper = styled.div`\n  position: relative;\n  width: 10rem;\n  transition: all 0.3s ease-in-out;\n  display: block;\n  margin-right: 1rem;\n  &:last-of-type {\n    margin-right: 7rem;\n  }\n  &:hover {\n    ${RemoveBtn} {\n      opacity: 1;\n    }\n    ${ImgWrapp} {\n      opacity: 1;\n      transition: all 0.4s ease-in;\n    }\n  }\n`;\n\nconst ImagesContainer = styled.div`\n  display: flex;\n  width: 30rem;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scroll-behavior: smooth;\n`;\nconst RightBlur = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  &::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100px;\n    height: 100%;\n    background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, #fff 100%);\n  }\n`;\n\nconst Chevron = styled(BsChevronRight)`\n  font-size: 2rem;\n  color: ${color.grey_500};\n  position: absolute;\n  right: -2.5rem;\n  top: 4rem;\n  cursor: pointer;\n`;\n\nconst UploadBtn = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","/Users/macbooktouch/Desktop/Lux House/frontend/src/components/DropDownInput.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/LoaderSemiCircle.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/OrdersScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/OrderDetailsAdminScreen.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/components/ScrollTop.jsx",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/store/reducers/wichlistReducer.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/actions/wichlistAction.js",[],"/Users/macbooktouch/Desktop/Lux House/frontend/src/screens/WichListScreen.jsx",[],{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":97,"column":6,"nodeType":"371","endLine":97,"endColumn":19,"suggestions":"372"},{"ruleId":"369","severity":1,"message":"373","line":106,"column":6,"nodeType":"371","endLine":106,"endColumn":20,"suggestions":"374"},{"ruleId":"369","severity":1,"message":"375","line":120,"column":6,"nodeType":"371","endLine":120,"endColumn":21,"suggestions":"376"},{"ruleId":"377","severity":1,"message":"378","line":15,"column":16,"nodeType":"379","messageId":"380","endLine":15,"endColumn":23},{"ruleId":"369","severity":1,"message":"381","line":47,"column":6,"nodeType":"371","endLine":47,"endColumn":59,"suggestions":"382"},{"ruleId":"369","severity":1,"message":"383","line":50,"column":6,"nodeType":"371","endLine":50,"endColumn":21,"suggestions":"384"},{"ruleId":"369","severity":1,"message":"385","line":115,"column":6,"nodeType":"371","endLine":115,"endColumn":8,"suggestions":"386"},{"ruleId":"369","severity":1,"message":"387","line":119,"column":6,"nodeType":"371","endLine":119,"endColumn":26,"suggestions":"388"},{"ruleId":"377","severity":1,"message":"389","line":499,"column":7,"nodeType":"379","messageId":"380","endLine":499,"endColumn":10},{"ruleId":"369","severity":1,"message":"390","line":66,"column":6,"nodeType":"371","endLine":66,"endColumn":34,"suggestions":"391"},{"ruleId":"377","severity":1,"message":"392","line":25,"column":20,"nodeType":"379","messageId":"380","endLine":25,"endColumn":31},{"ruleId":"369","severity":1,"message":"393","line":42,"column":6,"nodeType":"371","endLine":42,"endColumn":10,"suggestions":"394"},{"ruleId":"369","severity":1,"message":"395","line":49,"column":6,"nodeType":"371","endLine":49,"endColumn":29,"suggestions":"396"},{"ruleId":"377","severity":1,"message":"397","line":2,"column":28,"nodeType":"379","messageId":"380","endLine":2,"endColumn":36},{"ruleId":"377","severity":1,"message":"398","line":21,"column":32,"nodeType":"379","messageId":"380","endLine":21,"endColumn":49},"lines-around-directive",["399"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filtredProducts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearchedProducts' needs the current value of 'filtredProducts'.","ArrayExpression",["400"],"React Hook useEffect has missing dependencies: 'filtredProducts' and 'searchedProducts'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearchedProducts' needs the current value of 'filtredProducts'.",["401"],"React Hook useEffect has a missing dependency: 'filtredProducts'. Either include it or remove the dependency array.",["402"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has an unnecessary dependency: 'selectPrice'. Either exclude it or remove the dependency array. Outer scope values like 'selectPrice' aren't valid dependencies because mutating them doesn't re-render the component.",["403"],"React Hook useEffect has missing dependencies: 'cartItem.length' and 'userInfo'. Either include them or remove the dependency array.",["404"],"React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["405"],"React Hook useEffect has a missing dependency: 'getState'. Either include it or remove the dependency array.",["406"],"'Div' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["407"],"'setSdkReady' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["408"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["409"],"'useState' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","padding-line-between-statements",{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},"Update the dependencies array to be: [filtredProducts, pickedColor]",{"range":"430","text":"431"},"Update the dependencies array to be: [filtredProducts, freeShipping, searchedProducts]",{"range":"432","text":"433"},"Update the dependencies array to be: [filtredProducts, selectedPrice]",{"range":"434","text":"435"},"Update the dependencies array to be: [porductList, pickedColor, freeShipping]",{"range":"436","text":"437"},"Update the dependencies array to be: [user, history, userInfo, cartItem.length]",{"range":"438","text":"439"},"Update the dependencies array to be: [getToken]",{"range":"440","text":"441"},"Update the dependencies array to be: [countryName, getState, token]",{"range":"442","text":"443"},"Update the dependencies array to be: [success, history, dispatch, order._id]",{"range":"444","text":"445"},"Update the dependencies array to be: [dispatch, id]",{"range":"446","text":"447"},"Update the dependencies array to be: [dispatch, history, id, success]",{"range":"448","text":"449"},[3869,3882],"[filtredProducts, pickedColor]",[4131,4145],"[filtredProducts, freeShipping, searchedProducts]",[4786,4801],"[filtredProducts, selectedPrice]",[1566,1619],"[porductList, pickedColor, freeShipping]",[1869,1884],"[user, history, userInfo, cartItem.length]",[3485,3487],"[getToken]",[3532,3552],"[countryName, getState, token]",[2066,2094],"[success, history, dispatch, order._id]",[1676,1680],"[dispatch, id]",[1814,1837],"[dispatch, history, id, success]"]